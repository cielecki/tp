{"version":3,"sources":["misc/AR.js","misc/Utils.js","misc/Serialisation.js","data/traits.js","game/ZoneType.js","data/zones.js","data/planets.js","game/Filter.js","game/Zone.js","game/Story.js","game/Entity.js","game/Resource.js","components/Dialog.js","game/Exploration.js","data/resources.js","stories/dataLogs.js","stories/alienSpecies.js","data/environment.js","stories/environmentalDangers.js","stories/resourceStashes.js","stories/scanDisruptors.js","stories/genesis.js","game/Universe.js","components/EntityDetails.js","components/Scanner.js","components/UniverseInfo.js","components/EntityList.js","components/TauPrimeMenu.js","components/App.js","misc/serviceWorker.js","index.js"],"names":["AR","NUM_MARKERS","markers","animationFrame","lastTimeMsec","doUpdate","animate","nowMsec","requestAnimationFrame","deltaMsec","Math","min","setEnabledCamera","enabled","document","querySelector","removeAttribute","cancelAnimationFrame","setAttribute","getCurrentMarkerVisibility","visibility","i","object3d","visible","initializeAR","renderer","window","THREE","WebGLRenderer","alpha","setClearColor","Color","setSize","innerWidth","innerHeight","domElement","style","position","top","left","body","appendChild","scene","Scene","camera","Camera","add","arToolkitSource","THREEx","ArToolkitSource","sourceType","onResize","onResizeElement","copyElementSizeTo","arToolkitContext","arController","canvas","init","addEventListener","ArToolkitContext","cameraParametersUrl","baseURL","detectionMode","matrixCodeType","maxDetectionRate","canvasWidth","canvasHeight","projectionMatrix","copy","getProjectionMatrix","markerRoot","Group","ArMarkerControls","type","barcodeValue","ready","update","render","chance","Chance","getRandomInt","max","floor","random","getRandomElement","array","console","assert","length","getWeightedRandomElement","arr","sumOfWeights","reduce","sum","obj","weight","error","speak","text","log","responsiveVoice","capitalizeFirst","replace","c","toUpperCase","haveCommonElement","arr1","arr2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","e1","value","indexOf","err","return","arrayUnion","array1","array2","a","concat","j","splice","arrayUnique","Object","toConsumableArray","arrayIntersection","filter","n","ensureArrayOrNull","typeCheck","arguments","Array","isArray","forEach","element","REGISTERED_CLASSES","StaticObject","_ref","_ref$id","id","classCallCheck","this","REPOSITORY","createClass","key","registerClass","classObject","classId","PLANET_TRAIT_GAS_GIGANT","PLANET_TRAIT_COLD","PLANET_TRAIT_BIO_HAZARD","PLANET_TRAIT_START","PLANET_TRAITS","ZoneType","_StaticObject","_this","name","plural","conf","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","call","inherits","ZONE_TYPE_OCEAN","ZONE_TYPE_RIVER","ZONE_TYPE_VALLEY","ZONE_TYPE_PLAINS","ZONE_TYPE_DESERT","ZONE_TYPE_CITY","ZONE_TYPE_NEST","ZONE_TYPE_MOUNTAIN","ZONE_TYPE_CRATER","ZONE_TYPE_FOREST","ZONE_TYPE_CLOUD","ZONE_TYPE_GLACIER","ZONE_TYPE_CONTAINER","ZONE_TYPE_EXPLORED","PLANET_ARCHETYPES","names","image","minDepth","maxDepth","traits","zoneTypeWeights","zoneType","Filter","_ref$includedPlanetTr","includedPlanetTraits","_ref$excludedPlanetTr","excludedPlanetTraits","_ref$includedZoneType","includedZoneTypes","_ref$excludedZoneType","excludedZoneTypes","_ref$allowedColumns","allowedColumns","_ref$allowedRows","allowedRows","_ref$customFilter","customFilter","subArray","ensureArrayOfArraysOrNull","trait","_ref2$zoneIndex","_ref2","zoneIndex","_ref2$zoneType","_ref2$universe","universe","_ref2$planet","planet","column","row","filters","configuration","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","mergeToConf","attribute","mergeFunction","first","second","_iterator2","slice","Serialisation","Zone","planetId","_ref$exploration","exploration","_ref$visible","react_default","createElement","className","onClick","onExploration","canBeScanned","App","COMPONENT","setAction","onExplorationDialog","newZone","newUniverse","state","objects","zones","updateUniverse","providedResources","requiredResources","definition","scanningRestrictions","isAcceptable","STORY_TELLERS","Story","_ref$weight","_ref$filter","calculateWeight","zoneBuilder","getAvailableZoneType","Entity","_ref$name","_ref$traits","_ref$image","_ref$zones","_ref$zoneTypeWeights","_ref$value","_ref$fitness","fitness","_ref2$names","_ref2$traits","_ref2$minDepth","_ref2$maxDepth","Utils","availableZoneDistribution","zoneWithWeight","stories","zoneBuilders","weightedZoneBuilder","createZone","push","RESOURCES","Resource","config","assertThisInitialized","Dialog","props","voice","result","buttonComponents","buttons","map","buttonDefinition","index","React","Component","exploreAndReturnToScanner","zone","replaceThisZone","objectSpread","isFullyExplored","dataLog","dataLogs","returnToScanner","Dialog_Dialog","Fragment","createDescription","onFullyExplored","selectObject","Exploration","_ref$providedResource","_ref$requiredResource","res","assign","calculate","SimpleExploration","_Exploration","RESOURCE_A","RESOURCE_B","RESOURCE_C","RESOURCE_D","DataLog","SimpleDataLog","_DataLog","description","ResourceDataLog","_DataLog2","_this2","resource","countResource","provided","DataLogExploration","_this3","_ref3","_ref3$reason","reason","SpeciesInfo","nature","SpeciesStance","oppositeStances","reaction","SPECIES_ROBOTS","hostile","trading","sharing","died","SPECIES_BUGS","SPECIES_INTELLIGENT_LIFE","SPECIES_STANCE_HOSTILE","species","speciesDefinition","SPECIES_STANCE_TRADING","tradingResourceCount","tradingResource","SPECIES_STANCE_SHARING","tradedResource","SPECIES_STANCE_DEAD","SPECIES","SPECIES_STANCES","SpeciesExploration","stance","SpeciesDataLog","_ref4","_this4","exceptionTrait","_i","oppositeStance","exceptionProvidedResources","exceptionRequiredResources","Serialization","ENVIRONMENTAL_DANGERS","distribution","eventOccurrenceWeight","hot","fire","cold","FireExploration","esm_extends","MagnesiumExploration","envStories","environment","ResourceOnColumnDataLog","1","2","3","ResourceOnRowDataLog","ResourceOnPlanetDataLog","storyElements","story","toLowerCase","ResourceExploration","count","resourceStories","_arr2","values","_i2","resources","frequencies","ScanningRestrictionRowDataLog","ScanningRestrictionTraitDataLog","ScanningRestrictionZoneTypeDataLog","LocationDataLog","objectName","_ref$trait","_ref$zoneType","traitFragment","zoneFragment","PartOfTheCodeDataLog","_ref2$prefix","prefix","_ref2$suffix","suffix","complaint","GenesisDeviceActiveExploration","codes","genesis","codeButtons","code","theCode","GenesisDeviceInActiveExploration","GenesisBeconExploration","_ref5","genesisDevice","device","genesisZone","fillGenesis","beginnings","syllable","endings","b","_i3","e","theBeginning","theEnding","entities","entity","temporaryValue","randomIndex","currentIndex","shuffle","beacon","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Universe","_ref$objects","_ref$definition","required","_arr","get","facts","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_this$countResource","word","planetArchetype","initiateWithArchetype","fillPlanets","f","fillScanningRestrictions","A","B","C","D","fs","rarityMultiplier","fillResourceSources","bugs","robots","aliens","planetArchetypesWithSpecies","archetype","traitsCoexistingWithSpecies","find","archType","fillSpecies","env","frequency","fillEnvironmentalDangersProbabilities","teller","fillZones","selectBestUniverse","candidates","candidate","create","sort","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","EntityDetails","planetData","src","alt","clear","onReset","SCANNER_MODE_LOCKING","DynamicOverlay","opacity","onRef","Scanner","dynamicOverlay","lockingId","mode","currentId","presence","periodicLoggingTimeout","setTimeout","periodicLogging","arTickTimeout","arTick","dt","markerVisibility","maxPresence","maxId","minDifference","setState","setLockingId","clearTimeout","objectId","onObjectSelected","lockingInfo","Scanner_DynamicOverlay","ref","UniverseInfo","fact","EntityList","onSelectedPlanet","planetsData","planets","keys","react","TauPrimeMenu","EntityList_EntityList","UniverseInfo_UniverseInfo","newGame","loadUniverse","alert","selectedId","currentlyDisplayedAction","action","localStorage","json","JSON","parse","_do","_so","stringify","entries","slicedToArray","constructor","EntityDetails_EntityDetails","TauPrimeMenu_TauPrimeMenu","Scanner_Scanner","Boolean","location","hostname","match","ReactDOM","App_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.18929748.chunk.js","sourcesContent":["export const AR = {};\n\n\n(function () {\n  AR.NUM_MARKERS = 64;\n  let cameraIsEnabled = false;\n  let markers = [];\n  \n  let animationFrame = 0;\n  let lastTimeMsec = null;\n  let doUpdate = null;\n\n  function animate(nowMsec) {\n    animationFrame = requestAnimationFrame(animate);\n    \n    // measure time\n    lastTimeMsec  = lastTimeMsec || nowMsec-1000/60;\n    let deltaMsec = Math.min(200, nowMsec - lastTimeMsec);\n    lastTimeMsec  = nowMsec;\n\n    if (doUpdate) {\n      doUpdate(deltaMsec / 1000);\n    }\n  }\n\n  AR.setEnabledCamera = function(enabled) {\n    cameraIsEnabled = enabled;\n\n    if (cameraIsEnabled) {\n      document.querySelector(\"body>canvas\") && document.querySelector(\"body>canvas\").removeAttribute(\"class\");\n      document.querySelector(\"body>video\") && document.querySelector(\"body>video\").removeAttribute(\"class\");\n      cancelAnimationFrame(animationFrame);\n      animationFrame = requestAnimationFrame(animate);\n    } else {\n      document.querySelector(\"body>canvas\") && document.querySelector(\"body>canvas\").setAttribute(\"class\", \"hidden-canvas\");\n      document.querySelector(\"body>video\") && document.querySelector(\"body>video\").setAttribute(\"class\", \"hidden-canvas\");\n      cancelAnimationFrame(animationFrame);\n      animationFrame = 0;\n    }\n  };\n\n  AR.getCurrentMarkerVisibility = function() {\n    let visibility = {};\n\n    for (let i = 0; i < AR.NUM_MARKERS; i++) {\n      visibility[i] = markers[i].object3d.visible;\n    }\n\n    return visibility;\n  };\n\n  //\n  // Modifying the library function to inverse colors\n  //\n  /*ARController.prototype._copyImageToHeap = function(image) {\n    if (!image) {\n      image = this.image;\n    }\n\n    if( (image.nodeName === 'IMG' && image.width > image.height ) ||\n      (image.nodeName === 'VIDEO' && image.videoWidth > image.videoHeight) ){\n      // if landscape\n      this.ctx.drawImage(image, 0, 0, this.canvas.width, this.canvas.height); // draw video\n    }else{\n      // if portrait\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      var scale = this.canvas.height / this.canvas.width;\n      var scaledHeight = this.canvas.width*scale;\n      var scaledWidth = this.canvas.height*scale;\n      var marginLeft = ( this.canvas.width - scaledWidth)/2;\n      this.ctx.drawImage(image, marginLeft, 0, scaledWidth, scaledHeight); // draw video\n    }\n\n    var imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    var data = imageData.data;\n\n    //\n    // Modification start\n    //\n    for(var q=0; q < data.length; q += 4){\n      data[q+0] = 255 - data[q+0];\n      data[q+1] = 255 - data[q+1];\n      data[q+2] = 255 - data[q+2];\n    }\n    //\n    // Modification end\n    //\n\n    if (this.dataHeap) {\n      this.dataHeap.set( data );\n      return true;\n    }\n    return false;\n  };*/\n\n  AR.initializeAR = function () {\n    let renderer  = new window.THREE.WebGLRenderer({\n      // antialias  : true,\n      alpha: true\n    });\n\n    renderer.setClearColor(new window.THREE.Color('lightgrey'), 0);\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0px';\n    renderer.domElement.style.left = '0px';\n    \n    document.body.appendChild( renderer.domElement );\n\n    let scene = new window.THREE.Scene();\n    let camera = new window.THREE.Camera();\n    scene.add(camera);\n  \n    let arToolkitSource = new window.THREEx.ArToolkitSource({\n      sourceType : 'webcam',   \n    });\n\n    arToolkitSource.init(function onReady(){\n      onResize()\n    });\n  \n    // handle resize\n    window.addEventListener('resize', function(){\n      onResize()\n    });\n\n    function onResize(){\n      arToolkitSource.onResizeElement();\n      arToolkitSource.copyElementSizeTo(renderer.domElement);\n      if( arToolkitContext.arController !== null ){\n        arToolkitSource.copyElementSizeTo(arToolkitContext.arController.canvas)\n      } \n    }\n\n    let arToolkitContext = new window.THREEx.ArToolkitContext({\n      cameraParametersUrl: window.THREEx.ArToolkitContext.baseURL + '../data/data/camera_para.dat',\n      detectionMode: 'mono_and_matrix',\n      matrixCodeType: '3x3',\n      maxDetectionRate: 30,\n      canvasWidth: 80*3,\n      canvasHeight: 60*3,\n    });\n\n    // initialize it\n    arToolkitContext.init(function onCompleted(){\n      camera.projectionMatrix.copy( arToolkitContext.getProjectionMatrix() );\n    });\n\n    for (let i = 0; i < AR.NUM_MARKERS; i++) {\n      let markerRoot = new window.THREE.Group();\n      scene.add(markerRoot);\n\n      markers[i] = new window.THREEx.ArMarkerControls(arToolkitContext, markerRoot, {\n        type: 'barcode',\n        barcodeValue: i,\n      })\n    }\n\n    doUpdate = function (/*dt*/) {\n      if(arToolkitSource.ready)\n        arToolkitContext.update(arToolkitSource.domElement);\n      renderer.render(scene, camera);\n    };\n\n    AR.setEnabledCamera(true);\n  }    \n})();\n      ","import Chance from \"chance\";\n\nexport const chance = new Chance();\n\n/**\n * The de-facto unbiased shuffle algorithm is the Fisher-Yates (aka Knuth) Shuffle.\n * See https://github.com/coolaj86/knuth-shuffle\n */\nexport function shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nexport function getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive)\n * Using Math.round() will give you a non-uniform distribution!\n */\nexport function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Returns a random item from array\n */\nexport function getRandomElement(array) {\n    console.assert(array.length > 0, \"Array should not be empty\");\n    return array[Math.floor(Math.random() * array.length)];\n}\n\n/**\n * Returns a random item from array, requires weight attribute on elements\n */\nexport function getWeightedRandomElement(arr) {\n\n    let sumOfWeights = arr.reduce(function (sum, obj) {\n        return sum + obj.weight;\n    }, 0); //TODO: this could be added to the array ...\n    //console.log(\"sumOfWeights\", sumOfWeights);\n\n    let random = Math.random() * sumOfWeights;\n    //console.log(\"random\", random);\n\n    for (let i = 0; i < arr.length; i++) {\n        random -= arr[i].weight;\n        if (random <= 0) {\n            //console.log(\"i\", i);\n            return arr[i];\n        }\n    }\n\n    console.error(\"No element found\", arr, sumOfWeights, random);\n}\n\n\n/**\n *\n */\nexport function speak(text) {\n    console.log(text);\n    window.responsiveVoice.speak(text);\n}\n\n/**\n *\n */\nexport function capitalizeFirst(text) {\n    return text.replace(/^\\w/, c => c.toUpperCase());\n}\n\n/**\n *\n */\nexport function haveCommonElement(arr1, arr2) {\n    for (let e1 of arr1) {\n        if (arr2.indexOf(e1) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n *\n */\nexport function verifyKeyInObject(key, obj) {\n    if (!(key in obj)) {\n        console.error(\"Unknown key\", key, obj)\n    }\n}\n\n/**\n *\n */\nexport function arrayUnique(array) {\n    let a = array.concat();\n    for (let i = 0; i < a.length; ++i) {\n        for (let j = i + 1; j < a.length; ++j) {\n            if (a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\n/**\n *\n * @param array1\n * @param array2\n * @returns {SEA3D.Stream|T[]|string}\n */\nexport function arrayUnion(array1, array2) {\n    return arrayUnique([...array1, ...array2]);\n}\n\n/**\n *\n * @param array1\n * @param array2\n * @returns {*}\n */\nexport function arrayIntersection(array1, array2) {\n    return array1.filter(function (n) {\n        return array2.indexOf(n) !== -1;\n    });\n}\n\n/**\n *\n * @param value\n * @param typeCheck\n * @returns {*}\n */\nexport function ensureArrayOrNull(value, typeCheck = null) {\n    if (value != null) {\n        if (!Array.isArray(value)) {\n            value = [value];\n        }\n\n        if (typeCheck) {\n            value.forEach(function(element) {\n                console.assert(typeCheck(element), \"All elements of an array should be of given type\", value);\n            });\n        }\n    }\n\n    return value;\n}\n\n/**\n *\n * @param value\n * @param typeCheck\n * @returns {*}\n */\nexport function ensureArrayOfArraysOrNull(value, typeCheck = null) {\n    if (value != null) {\n        if (!Array.isArray(value)) {\n            value = [[value]];\n        } else if (Array.isArray(value) && (value.length === 0 || !Array.isArray(value[0]))) {\n            value = [value];\n        }\n\n        if (typeCheck) {\n            value.forEach(function(subArray) {\n                subArray.forEach(function(element) {\n                    console.assert(typeCheck(element), \"All elements of an array should be of given type\", subArray);\n                });\n            });\n        }\n    }\n\n    return value;\n}","const REGISTERED_CLASSES = {}\n\nexport class StaticObject {\n    constructor({id = null}) {\n        console.assert(id !== null);\n        this.id = id;\n\n        console.assert(!(id in StaticObject.REPOSITORY), `Duplicate ID ${id}`, `existing object`, StaticObject.REPOSITORY[id], `new object`, this);\n        StaticObject.REPOSITORY[id] = this;\n    }\n\n    static fromJSON(id) {\n\n    }\n}\n\nexport function registerClass(classObject, classId = null) {\n    console.assert(classId, `Class ID not supplied`, classId, classObject);\n    console.assert(!(classId in REGISTERED_CLASSES), `Duplicate classID ${classId} for class`, classObject);\n    REGISTERED_CLASSES[classId] = classObject;\n}\n\nexport function serialize(value) {\n    return JSON.stringify(value, function(name, value) {\n        if (value instanceof StaticObject) {\n            return {\n                _so: value.id,\n            }\n        }\n\n        for (let [classId, classObject] of Object.entries(REGISTERED_CLASSES)) {\n            if (value instanceof classObject) {\n                return {\n                    _do: classId,\n                    ...value\n                }\n            }\n        }\n\n        if (typeof value === 'object' && value !== null) {\n            if (value.constructor !== Array && value.constructor !== Object) {\n                console.error(value, 'is of non registered class', value.constructor);\n            }\n        }\n\n        return value;\n    });\n}\n\nexport function deserialize(json) {\n    return JSON.parse(json, function(name, value) {\n        if (value === null) {\n            return value;\n        }\n\n        if (typeof value === 'object') {\n            if (\"_do\" in value) {\n                let classId = value._do;\n                console.assert(classId in REGISTERED_CLASSES, `${classId} is an unknown class id.`);\n                return new REGISTERED_CLASSES[classId](value);\n            } else if (typeof value === 'object' && \"_so\" in value) {\n                let id = value._so;\n\n                if (id === null) {\n                    return null;\n                }\n\n                console.assert(id in StaticObject.REPOSITORY, `Unknown ID ${id}`);\n                return StaticObject.REPOSITORY[id];\n            }\n        }\n\n        return value;\n    });\n}\n\nStaticObject.REPOSITORY = {};\n","export const PLANET_TRAIT_WIND = \"Wind\";\nexport const PLANET_TRAIT_VOLCANIC = \"Volcanoes\";\nexport const PLANET_TRAIT_SMALL = \"Small size\";\nexport const PLANET_TRAIT_ROBOTS = \"AI robots\";\nexport const PLANET_TRAIT_PLANT_LIFE = \"Plant life\";\nexport const PLANET_TRAIT_OCEAN = \"Oceans\";\nexport const PLANET_TRAIT_METEOR_SHOWER = \"Meteor showers\";\nexport const PLANET_TRAIT_INTELLIGENT_LIFE = \"Aliens\";\nexport const PLANET_TRAIT_HOT = \"Hot temperature\";\nexport const PLANET_TRAIT_GRAVITY = \"High gravity\";\nexport const PLANET_TRAIT_GAS_GIGANT = \"Thick atmosphere\";\nexport const PLANET_TRAIT_COLD = \"Cold temperature\";\nexport const PLANET_TRAIT_BUGS = \"Bugs\";\nexport const PLANET_TRAIT_BIO_HAZARD = \"Toxic atmosphere\";\nexport const PLANET_TRAIT_START = \"Warp gate\";\n\nexport const PLANET_TRAITS = [\n\tPLANET_TRAIT_WIND,\n\tPLANET_TRAIT_VOLCANIC,\n\tPLANET_TRAIT_SMALL,\n\tPLANET_TRAIT_ROBOTS,\n\tPLANET_TRAIT_PLANT_LIFE,\n\tPLANET_TRAIT_OCEAN,\n\tPLANET_TRAIT_METEOR_SHOWER,\n\tPLANET_TRAIT_INTELLIGENT_LIFE,\n\tPLANET_TRAIT_HOT,\n\tPLANET_TRAIT_GRAVITY,\n\tPLANET_TRAIT_GAS_GIGANT,\n\tPLANET_TRAIT_COLD,\n\tPLANET_TRAIT_BUGS,\n\tPLANET_TRAIT_BIO_HAZARD\n];","import {StaticObject} from \"../misc/Serialisation\";\n\n\nexport class ZoneType extends StaticObject {\n    constructor({name, plural, ...conf}) {\n        super(conf);\n\n        this.name = name;\n        this.plural = plural;\n    }\n}","import {ZoneType} from \"../game/ZoneType\";\n\nexport const ZONE_TYPE_OCEAN     = new ZoneType({ id: \"ZONE_TYPE_OCEAN\", name: \"Ocean\", plural: \"Oceans\", });\nexport const ZONE_TYPE_RIVER     = new ZoneType({ id: \"ZONE_TYPE_RIVER\", name: \"River\", plural: \"Rivers\"  });\nexport const ZONE_TYPE_VALLEY    = new ZoneType({ id: \"ZONE_TYPE_VALLEY\", name: \"Valley\", plural: \"Valleys\"  });\nexport const ZONE_TYPE_PLAINS    = new ZoneType({ id: \"ZONE_TYPE_PLAINS\", name: \"Plains\", plural: \"Plains\"  });\nexport const ZONE_TYPE_DESERT    = new ZoneType({ id: \"ZONE_TYPE_DESERT\", name: \"Desert\", plural: \"Desert\"  });\nexport const ZONE_TYPE_CITY      = new ZoneType({ id: \"ZONE_TYPE_CITY\", name: \"City\", plural: \"Cities\"  });\nexport const ZONE_TYPE_NEST      = new ZoneType({ id: \"ZONE_TYPE_NEST\", name: \"Nest\", plural: \"Nests\"  });\nexport const ZONE_TYPE_MOUNTAIN  = new ZoneType({ id: \"ZONE_TYPE_MOUNTAIN\", name: \"Mountain\", plural: \"Mountains\"  });\nexport const ZONE_TYPE_CRATER    = new ZoneType({ id: \"ZONE_TYPE_CRATER\", name: \"Crater\", plural: \"Craters\"  });\nexport const ZONE_TYPE_FOREST    = new ZoneType({ id: \"ZONE_TYPE_FOREST\", name: \"Forest\", plural: \"Forests\"  });\nexport const ZONE_TYPE_CLOUD     = new ZoneType({ id: \"ZONE_TYPE_CLOUD\", name: \"Cloud\", plural: \"Clouds\"  });\nexport const ZONE_TYPE_GLACIER   = new ZoneType({ id: \"ZONE_TYPE_GLACIER\", name: \"Glacier\", plural: \"Glaciers\"  });\nexport const ZONE_TYPE_CONTAINER = new ZoneType({ id: \"ZONE_TYPE_CONTAINER\", name: \"Supplies\", plural: \"Supplies\"  });\nexport const ZONE_TYPE_EXPLORED  = new ZoneType({ id: \"ZONE_TYPE_EXPLORED\", name: \"\", plural: \"\" });","import {\n    PLANET_TRAIT_BIO_HAZARD,\n    PLANET_TRAIT_BUGS,\n    PLANET_TRAIT_COLD,\n    PLANET_TRAIT_GAS_GIGANT,\n    PLANET_TRAIT_GRAVITY,\n    PLANET_TRAIT_HOT,\n    PLANET_TRAIT_INTELLIGENT_LIFE,\n    PLANET_TRAIT_METEOR_SHOWER,\n    PLANET_TRAIT_OCEAN,\n    PLANET_TRAIT_PLANT_LIFE,\n    PLANET_TRAIT_ROBOTS,\n    PLANET_TRAIT_SMALL,\n    PLANET_TRAIT_START,\n    PLANET_TRAIT_VOLCANIC,\n    PLANET_TRAIT_WIND\n} from \"./traits\";\nimport {\n    ZONE_TYPE_CITY,\n    ZONE_TYPE_CLOUD,\n    ZONE_TYPE_CONTAINER,\n    ZONE_TYPE_CRATER,\n    ZONE_TYPE_DESERT,\n    ZONE_TYPE_FOREST,\n    ZONE_TYPE_GLACIER,\n    ZONE_TYPE_MOUNTAIN,\n    ZONE_TYPE_NEST,\n    ZONE_TYPE_OCEAN,\n    ZONE_TYPE_PLAINS,\n    ZONE_TYPE_RIVER,\n    ZONE_TYPE_VALLEY\n} from \"./zones\";\n\nexport const PLANET_ARCHETYPES = [\n    {\n        id: 1,\n        names: [\"Eallejo\", \"Itheanist\", \"Ushain\", \"Ouckesi\"],\n        image: \"planets.jpg\",\n        minDepth: 4,\n        maxDepth: 6,\n        traits: [\n            PLANET_TRAIT_INTELLIGENT_LIFE,\n            PLANET_TRAIT_WIND,\n            PLANET_TRAIT_PLANT_LIFE\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 3.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        id: 2,\n        names: [\"Ijabeibu\", \"Gaeffe\", \"Kroort\", \"Nuonge\"],\n        image: \"planets2.jpg\",\n        minDepth: 1,\n        maxDepth: 3,\n        traits: [\n            PLANET_TRAIT_SMALL,\n            PLANET_TRAIT_COLD,\n            PLANET_TRAIT_ROBOTS\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        id: 3,\n        names: [\"Entuceff\", \"Toontebe\", \"Niane\", \"Trang\"],\n        image: \"planets3.jpg\",\n        minDepth: 3,\n        maxDepth: 6,\n        traits: [\n            PLANET_TRAIT_GAS_GIGANT,\n            PLANET_TRAIT_COLD,\n            PLANET_TRAIT_WIND\n\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        id: 4,\n        names: [\"Olinia\", \"Atarted\", \"Preaheshe\", \"Loulo\"],\n        image: \"planets4.jpg\",\n        minDepth: 4,\n        maxDepth: 6,\n        traits: [\n            PLANET_TRAIT_METEOR_SHOWER,\n            PLANET_TRAIT_HOT,\n            PLANET_TRAIT_VOLCANIC\n\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        id: 5,\n        names: [\"Azoeck\", \"Oetatent\", \"Kleasa\", \"Nawue\"],\n        image: \"planets5.jpg\",\n        minDepth: 3,\n        maxDepth: 6,\n        traits: [\n            PLANET_TRAIT_METEOR_SHOWER,\n            PLANET_TRAIT_HOT,\n            PLANET_TRAIT_ROBOTS\n\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 6,\n        names: [\"Azewaewe\", \"Ruockuli\", \"Igooss\", \"Ledei\", \"Toergena\"],\n        \"image\": \"planets6.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_WIND,\n            PLANET_TRAIT_BIO_HAZARD,\n            PLANET_TRAIT_BUGS\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_NEST, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 7,\n        names: [\"Heacke\", \"Iwessac\", \"Chunent\", \"Kloze\", \"Airgera\"],\n        \"image\": \"planets7.jpg\",\n        \"minDepth\": 4,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_GRAVITY,\n            PLANET_TRAIT_OCEAN,\n            PLANET_TRAIT_BUGS\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_NEST, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 8,\n        names: [\"Cliege\", \"Cleseth\", \"Ushaul\", \"Geishef\"],\n        \"image\": \"planets8.jpg\",\n        \"minDepth\": 4,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_PLANT_LIFE,\n            PLANET_TRAIT_BIO_HAZARD,\n            PLANET_TRAIT_OCEAN\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 9,\n        names: [\"Thaelo\", \"Soenta\", \"Elortos\", \"Usetuota\"],\n        \"image\": \"planets9.jpg\",\n        \"minDepth\": 1,\n        \"maxDepth\": 3,\n        \"traits\": [\n            PLANET_TRAIT_SMALL,\n            PLANET_TRAIT_COLD,\n            PLANET_TRAIT_INTELLIGENT_LIFE\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 10,\n        names: [\"Eartate\", \"Pleremn\", \"Renta\", \"Argall\"],\n        \"image\": \"planets10.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_GAS_GIGANT,\n            PLANET_TRAIT_PLANT_LIFE,\n            PLANET_TRAIT_GRAVITY\n\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 3.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 3.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 11,\n        names: [\"Drootucke\", \"Usseava\", \"Praust\", \"Oumurtick\"],\n        \"image\": \"planets11.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_METEOR_SHOWER,\n            PLANET_TRAIT_OCEAN,\n            PLANET_TRAIT_VOLCANIC\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 12,\n        names: [\"Luoce\", \"Guese\", \"Klere\", \"Krosu\", \"Maese\"],\n        \"image\": \"planets12.jpg\",\n        \"minDepth\": 1,\n        \"maxDepth\": 3,\n        \"traits\": [\n            PLANET_TRAIT_SMALL,\n            PLANET_TRAIT_COLD\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 13,\n        names: [\"Engoss\", \"Inaff\", \"Easemnerg\", \"Raungi\"],\n        \"image\": \"planets13.jpg\",\n        \"minDepth\": 1,\n        \"maxDepth\": 3,\n        \"traits\": [\n            PLANET_TRAIT_SMALL,\n            PLANET_TRAIT_METEOR_SHOWER\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 14,\n        names: [\"Claeng\", \"Ustiata\", \"Illerash\", \"Trese\"],\n        \"image\": \"planets14.jpg\",\n        \"minDepth\": 2,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_METEOR_SHOWER,\n            PLANET_TRAIT_ROBOTS,\n            PLANET_TRAIT_COLD\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 5.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 15,\n        names: [\"New Earth\", \"Volaris\", \"Moonstone\", \"P4B-282\"],\n        \"image\": \"planets15.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_OCEAN,\n            PLANET_TRAIT_PLANT_LIFE,\n            PLANET_TRAIT_INTELLIGENT_LIFE\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 16,\n        names: [\"Ackouta\", \"Eumimaff\", \"Europa\", \"Arteck\"],\n        \"image\": \"planets16.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_GRAVITY,\n            PLANET_TRAIT_OCEAN,\n            PLANET_TRAIT_ROBOTS\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 17,\n        names: [\"Shaulurte\", \"Ortoede\", \"Oustave\", \"Trene\"],\n        \"image\": \"planets17.jpg\",\n        \"minDepth\": 4,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_BIO_HAZARD,\n            PLANET_TRAIT_GRAVITY,\n            PLANET_TRAIT_ROBOTS\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 18,\n        names: [\"Plialu\", \"Knolaerg\", \"Ainethest\", \"Uroumem\"],\n        \"image\": \"planets18.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_GAS_GIGANT,\n            PLANET_TRAIT_BIO_HAZARD,\n            PLANET_TRAIT_WIND\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 19,\n        names: [\"Orion\", \"Oseanan\", \"Ickent\", \"Ineack\"],\n        \"image\": \"planets19.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_HOT,\n            PLANET_TRAIT_PLANT_LIFE,\n            PLANET_TRAIT_BUGS\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_NEST, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 20,\n        names: [\"Cuethaj\", \"Saingel\", \"Eneill\", \"Smeist\"],\n        \"image\": \"planets20.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 6,\n        \"traits\": [\n            PLANET_TRAIT_GAS_GIGANT,\n            PLANET_TRAIT_HOT,\n            PLANET_TRAIT_INTELLIGENT_LIFE\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 21,\n        names: [\"Eanellesh\", \"Imeabeb\", \"Euthene\", \"Antour\", \"Poeste\"],\n        \"image\": \"planets21.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 8,\n        \"traits\": [\n            PLANET_TRAIT_HOT,\n            PLANET_TRAIT_OCEAN,\n            PLANET_TRAIT_VOLCANIC\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 22,\n        names: [\"Oushaye\", \"Klusu\", \"Nell\", \"Orgell\", \"Areth\", \"Cluverg\"],\n        \"image\": \"planets22.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 8,\n        \"traits\": [\n            PLANET_TRAIT_WIND,\n            PLANET_TRAIT_OCEAN,\n            PLANET_TRAIT_VOLCANIC\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_OCEAN, weight: 1.0},\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CRATER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CLOUD, weight: 1.0},\n            {zoneType: ZONE_TYPE_GLACIER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        \"id\": 23,\n        names: [\"Plixi\", \"Aissetu\", \"Axart\", \"Prata\", \"Ilokooko\"],\n        \"image\": \"planets23.jpg\",\n        \"minDepth\": 3,\n        \"maxDepth\": 8,\n        \"traits\": [\n            PLANET_TRAIT_HOT,\n            PLANET_TRAIT_VOLCANIC,\n            PLANET_TRAIT_BUGS\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_DESERT, weight: 1.0},\n            {zoneType: ZONE_TYPE_NEST, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        id: 24,\n        names: [\"Ploolulle\", \"Isheweth\", \"Itass\", \"Oufathost\", \"Ouvuveff\"],\n        image: \"planets24.jpg\",\n        minDepth: 3,\n        maxDepth: 9,\n        traits: [\n            PLANET_TRAIT_WIND,\n            PLANET_TRAIT_PLANT_LIFE,\n            PLANET_TRAIT_BIO_HAZARD\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_RIVER, weight: 1.0},\n            {zoneType: ZONE_TYPE_VALLEY, weight: 1.0},\n            {zoneType: ZONE_TYPE_PLAINS, weight: 1.0},\n            {zoneType: ZONE_TYPE_MOUNTAIN, weight: 1.0},\n            {zoneType: ZONE_TYPE_FOREST, weight: 1.0},\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n        ],\n    },\n\n    {\n        id: 28,\n        names: [\"Albatross\"],\n        image: \"planets28.jpg\",\n        minDepth: 3,\n        maxDepth: 6,\n        traits: [\n            PLANET_TRAIT_START\n        ],\n        zoneTypeWeights: [\n            {zoneType: ZONE_TYPE_CONTAINER, weight: 1.0},\n            {zoneType: ZONE_TYPE_CITY, weight: 1.0},\n        ],\n    },\n];","import {\n    arrayIntersection,\n    arrayUnion,\n    ensureArrayOfArraysOrNull,\n    ensureArrayOrNull,\n    haveCommonElement\n} from \"../misc/Utils\";\nimport {ZoneType} from \"./ZoneType\";\nimport * as Serialisation from \"../misc/Serialisation\";\n\nexport default class Filter {\n    constructor({includedPlanetTraits = null, excludedPlanetTraits = null, includedZoneTypes = null, excludedZoneTypes = null, allowedColumns = null, allowedRows = null, customFilter = null} = {}) {\n\n        //Can be an array of arrays, which means one of all of the traits is required.\n        this.includedPlanetTraits = ensureArrayOfArraysOrNull(includedPlanetTraits, (trait) => typeof trait === 'string');\n        this.excludedPlanetTraits = ensureArrayOrNull(excludedPlanetTraits, (trait) => typeof trait === 'string');\n        this.includedZoneTypes = ensureArrayOrNull(includedZoneTypes, (trait) => trait instanceof ZoneType);\n        this.excludedZoneTypes = ensureArrayOrNull(excludedZoneTypes, (trait) => trait instanceof ZoneType);\n        this.allowedColumns = ensureArrayOrNull(allowedColumns, (trait) => typeof trait === 'number');\n        this.allowedRows = ensureArrayOrNull(allowedRows, (trait) => typeof trait === 'number');\n        this.customFilter = customFilter;\n    }\n\n    static merge(filters) {\n        const configuration = filters[0];\n\n        console.assert(configuration instanceof Filter, configuration);\n\n        for (const filter of filters.slice(1)) {\n            const mergeToConf = (attribute, mergeFunction) => {\n                const first = configuration[attribute];\n                const second = filter[attribute];\n\n                if (second !== null) {\n                    if (first !== null) {\n                        configuration[attribute] = mergeFunction(first, second);\n                    } else {\n                        configuration[attribute] = second;\n                    }\n                }\n            }\n\n            mergeToConf(`includedPlanetTraits`, arrayUnion); //Union of array of arrays.\n            mergeToConf(`excludedPlanetTraits`, arrayUnion);\n            mergeToConf(`includedZoneTypes`, arrayIntersection);\n            mergeToConf(`excludedZoneTypes`, arrayUnion);\n            mergeToConf(`allowedColumns`, arrayIntersection);\n            mergeToConf(`allowedRows`, arrayIntersection);\n            mergeToConf(`customFilter`, (/*array1, array2*/) => console.error(\"Can not merge two custom filters\"));\n        }\n\n        return new Filter(configuration);\n    }\n\n    isAcceptable({zoneIndex = null, zoneType = null, universe = null, planet = null}) {\n        if (planet !== null) {\n            let traits = planet.traits;\n\n            if (this.includedPlanetTraits !== null) {\n                console.assert(Array.isArray(this.includedPlanetTraits) && Array.isArray(this.includedPlanetTraits[0]));\n\n                for (let row of this.includedPlanetTraits) {\n                    if (!haveCommonElement(traits, row)) {\n                        return false;\n                    }\n                }\n            }\n\n            if (this.excludedPlanetTraits !== null && haveCommonElement(traits, this.excludedPlanetTraits)) {\n                return false;\n            }\n        }\n\n        if (zoneIndex !== null) {\n            let column = (zoneIndex % 3) + 1;\n            let row = Math.floor(zoneIndex / 3) + 1;\n\n            if (this.allowedColumns !== null && this.allowedColumns.indexOf(column) === -1) {\n                return false;\n            }\n\n            if (this.allowedRows !== null && this.allowedRows.indexOf(row) === -1) {\n                return false;\n            }\n        }\n\n        if (zoneType !== null) {\n            if (this.includedZoneTypes !== null && this.includedZoneTypes.indexOf(zoneType) === -1) {\n                return false;\n            }\n\n            if (this.excludedZoneTypes !== null && this.excludedZoneTypes.indexOf(zoneType) !== -1) {\n                return false;\n            }\n        }\n\n        return this.customFilter === null || this.customFilter({zoneIndex, zoneType, universe, planet});\n    }\n}\n\nSerialisation.registerClass(Filter, \"Filter\");","import React from 'react';\nimport App from '../components/App';\nimport './Zone.css';\nimport * as Serialisation from \"../misc/Serialisation\";\n\nexport default class Zone {\n    constructor({planetId, zoneIndex, type, exploration = null, visible = true}) {\n        this.planetId = planetId;\n        this.zoneIndex = zoneIndex;\n        this.type = type;\n        this.exploration = exploration;\n        this.visible = visible;\n    }\n\n    get providedResources() {\n        return this.exploration.providedResources;\n    }\n\n    get requiredResources() {\n        return this.exploration.requiredResources;\n    }\n\n    get planet() {\n        return App.COMPONENT.state.universe.objects[this.planetId];\n    }\n\n    render() {\n        return <button\n            key={this.zoneIndex}\n            className={this.exploration ? \"depth-level-\" + (this.zoneIndex + 1) : \"depth-level-excavated\"}\n            onClick={() => {\n                return (this.exploration) ? this.onExploration() : null\n            }}>\n            {this.canBeScanned ? this.name : \"???\"}\n        </button>\n    }\n\n    get name() {\n        return this.type.name;\n    }\n\n    get canBeScanned() {\n        let universe = App.COMPONENT.state.universe;\n        let planet = universe.objects[this.planetId];\n\n        if (this.exploration === null) {\n            return true;\n        }\n\n        if (universe.definition.scanningRestrictions &&\n            universe.definition.scanningRestrictions.isAcceptable({planet: planet, zoneIndex: this.zoneIndex, universe: universe, zoneType: this.type})) {\n            return false;\n        }\n\n        return this.visible;\n    }\n\n    onExploration() {\n        App.COMPONENT.setAction(this.exploration.onExplorationDialog(this));\n    }\n\n    replaceThisZone(newZone) {\n        let newUniverse = App.COMPONENT.state.universe.copy();\n        let newObjects = newUniverse.objects;\n\n        //\n        // Replace zone\n        //\n        newObjects[this.planetId].zones[this.zoneIndex] = newZone;\n\n        App.COMPONENT.updateUniverse(newUniverse);\n        return newUniverse;\n    }\n}\n\nSerialisation.registerClass(Zone, \"Zone\");","import Filter from \"./Filter\";\nimport Zone from \"./Zone\";\n\nexport let STORY_TELLERS = [];\n\nexport default class Story {\n    constructor({weight = 1.0, filter = new Filter(), visible = true, exploration}) {\n        this.weight = weight;\n        this.filter = filter;\n        this.exploration = exploration;\n        this.visible = visible;\n    }\n\n    calculateWeight(zoneIndex, planet, universe) {\n        if (!this.filter.isAcceptable({zoneIndex, planet, universe})) {\n            return 0.0\n        }\n\n        return this.weight;\n    }\n\n    createZone(zoneIndex, planet, universe) {\n        return {\n            weight: this.calculateWeight(zoneIndex, planet, universe), zoneBuilder: () => {\n                let zoneType = planet.getAvailableZoneType(this.filter);\n\n                return new Zone({\n                    planetId: planet.id,\n                    zoneIndex: zoneIndex,\n                    type: zoneType,\n                    exploration: this.exploration,\n                    visible: this.visible,\n                });\n            }\n        }\n    }\n}\n","import * as Utils from '../misc/Utils';\nimport * as Serialisation from \"../misc/Serialisation\";\nimport {PLANET_ARCHETYPES} from \"../data/planets\";\nimport {STORY_TELLERS} from \"./Story\";\n\nexport default class Entity {\n    constructor({id = -1, name = \"ERROR\", traits = [], image = \"Unknown.png\", zones = [], zoneTypeWeights: zoneTypeWeights = [], value = 0.0, fitness = 0.0} = {}) {\n        this.id = id;\n        this.name = name;\n        this.traits = traits;\n        this.image = image;\n        this.zones = zones;\n        this.zoneTypeWeights = zoneTypeWeights;\n        this.value = value;\n        this.fitness = fitness;\n    }\n\n    initiateWithArchetype({id, image, names = [\"Planet 1\"], traits = [], minDepth = 1, maxDepth = 6, zoneTypeWeights}) {\n        this.id = id;\n        this.name = Utils.getRandomElement(names);\n        this.traits = traits;\n        this.image = image;\n        this.zones = new Array(Utils.getRandomInt(minDepth, maxDepth));\n        this.zoneTypeWeights = zoneTypeWeights;\n    }\n\n    get isFullyExplored() {\n        for (let zone of this.zones) {\n            if (zone.exploration) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    getAvailableZoneType(filter = null) {\n        let availableZoneDistribution = this.zoneTypeWeights.filter(zoneWithWeight => {\n            return filter === null || filter.isAcceptable({zoneType: zoneWithWeight.zoneType});\n        });\n\n\n        if (availableZoneDistribution.length === 0) {\n            availableZoneDistribution = this.zoneTypeWeights;\n        }\n\n        return Utils.getWeightedRandomElement(availableZoneDistribution).zoneType;\n    }\n\n    fillZones(universe, stories) {\n        for (let zoneIndex = 0; zoneIndex < this.zones.length; zoneIndex++) {\n            if (!this.zones[zoneIndex]) {\n                let zoneBuilders = [];\n                for (let story of stories) {\n                    let weightedZoneBuilder = story.createZone(zoneIndex, this, universe);\n                    if (weightedZoneBuilder.weight > 0) {\n                        zoneBuilders.push(weightedZoneBuilder);\n                    }\n                }\n\n                this.zones[zoneIndex] = Utils.getWeightedRandomElement(zoneBuilders).zoneBuilder();\n            }\n        }\n    }\n}\n\n\nexport function fillPlanets(universe) {\n    for (let planetArchetype of PLANET_ARCHETYPES) {\n        let planet = new Entity();\n        planet.initiateWithArchetype(planetArchetype);\n        universe.objects[planet.id] = planet;\n    }\n}\n\nexport function fillZones(universe) {\n    let stories = [];\n\n    for (const teller of STORY_TELLERS) {\n        stories = stories.concat(teller(universe.definition));\n    }\n\n    for (let entity of Object.values(universe.objects)) {\n        entity.fillZones(universe, stories);\n    }\n}\n\nSerialisation.registerClass(Entity, \"Entity\");","import {StaticObject} from \"../misc/Serialisation\";\n\nexport let RESOURCES = [];\n\nexport default class Resource extends StaticObject {\n    constructor({name, plural, image, ...config}) {\n        super(config)\n        this.name = name;\n        this.plural = plural;\n        this.image = image;\n\n        RESOURCES.push(this);\n    }\n}\n","import React from 'react';\nimport './Dialog.css';\nimport {speak} from \"../misc/Utils\";\n\nexport default class Dialog extends React.Component {\n  render() {\n    speak(this.props.voice ? this.props.voice : this.props.result);\n\n    let buttonComponents = this.props.buttons.map((buttonDefinition, index) =>\n      <button key={index} onClick={() => buttonDefinition.onClick()}>\n        {buttonDefinition.name}\n      </button>\n    );\n    \n    return <div className=\"exploration-result\">\n      {this.props.result}\n      <div className=\"locked-overlay-bottom\">{buttonComponents}</div>\n    </div>\n  };\n}","import React from \"react\";\nimport {ZONE_TYPE_EXPLORED} from \"../data/zones\";\nimport Zone from \"./Zone\";\nimport Dialog from \"../components/Dialog\";\nimport App from '../components/App';\nimport {getRandomElement, speak} from \"../misc/Utils\";\nimport {PLANET_TRAIT_START} from \"../data/traits\";\n\nfunction onFullyExplored(planet) {\n    let universe = App.COMPONENT.state.universe;\n    let definition = universe.definition;\n    let dataLog = getRandomElement(definition.dataLogs);\n    let buttons = [\n        {name: \"OK\", onClick: () => {returnToScanner()}},\n    ];\n\n    if (planet.traits.indexOf(PLANET_TRAIT_START) !== -1 || Math.random() < 0.5) {\n        speak(`${planet.name} is now fully explored.`);\n        returnToScanner();\n    } else {\n        App.COMPONENT.setAction(<Dialog\n            result={<React.Fragment>\n                {planet.name} is now fully explored.\n                Your exploration of this planet allowed you to learn:<br/><br/>\n                <div className=\"data-log\">{dataLog.createDescription(universe)}</div>\n            </React.Fragment>}\n\n            voice={`${planet.name} is now fully explored.`}\n            buttons={buttons}\n        />);\n    }\n\n}\n\nexport let exploreAndReturnToScanner = (zone) => {\n    zone.replaceThisZone(new Zone({\n        ...zone,\n        type: ZONE_TYPE_EXPLORED,\n        exploration: null,\n    }));\n\n    if (zone.planet.isFullyExplored) {\n        onFullyExplored(zone.planet);\n    } else {\n        App.COMPONENT.setAction(null);\n    }\n\n    App.COMPONENT.selectObject(null);\n};\n\nexport let returnToScanner = () => {\n    App.COMPONENT.setAction(null);\n    App.COMPONENT.selectObject(null);\n};\n\nexport default class Exploration {\n    constructor({providedResources = [], requiredResources = []}) {\n\n        this.providedResources = providedResources;\n        this.requiredResources = requiredResources;\n    }\n\n    calculate(zone) {\n        console.error(\"Not Implemented\");\n    }\n\n    onExplorationDialog(zone) {\n        let res = {\n            result: <React.Fragment>ERROR</React.Fragment>,\n            buttons: [{name: \"OK\", onClick: () => {exploreAndReturnToScanner(zone)}}],\n        };\n\n        Object.assign(res, this.calculate(zone));\n        res.voice = res.voice ? res.voice : res.result;\n\n        return <Dialog result={res.result} voice={res.voice} buttons={res.buttons} />;\n    }\n}\n\nexport class SimpleExploration extends Exploration{\n    constructor({result, voice, ...config}) {\n        super(config);\n\n        this.result = result;\n        this.voice = voice;\n    }\n\n    calculate(zone) {\n        return {\n            result: this.result,\n            voice: this.voice,\n        }\n    }\n}\n","import Resource from \"../game/Resource\";\n\nexport const RESOURCE_A = new Resource({id: \"A\", \"name\": \"crystal\", plural: \"crystals\", \"image\": \"icon_resource_A.png\"});\nexport const RESOURCE_B = new Resource({id: \"B\", \"name\": \"gas canister\", plural: \"gas canisters\", \"image\": \"icon_resource_B.png\"});\nexport const RESOURCE_C = new Resource({id: \"C\", \"name\": \"tech\", plural: \"techs\", \"image\": \"icon_resource_C.png\"});\nexport const RESOURCE_D = new Resource({id: \"D\", \"name\": \"artifact\", plural: \"artifacts\", \"image\": \"icon_artifact.png\"});","import React from 'react';\nimport {getRandomElement} from \"../misc/Utils\";\nimport Exploration from \"../game/Exploration\";\nimport {ZONE_TYPE_CITY} from \"../data/zones\";\nimport Story, {STORY_TELLERS} from \"../game/Story\";\nimport './dataLogs.css';\nimport * as Serialisation from \"../misc/Serialisation\";\nimport Filter from \"../game/Filter\";\nimport App from \"../components/App\";\nimport {PLANET_TRAIT_START} from \"../data/traits\";\n\nexport class DataLog {\n    createDescription(universe) {\n        return \"???\";\n    }\n}\n\nexport class SimpleDataLog extends DataLog {\n    constructor({description}) {\n        super();\n        this.description = description;\n    }\n\n    createDescription(universe) { return this.description; }\n}\n\nexport class ResourceDataLog extends DataLog {\n    constructor({resource}) {\n        super();\n        this.resource = resource;\n    }\n\n    createDescription(universe) {\n        return <React.Fragment>\n            There is a total of {universe.countResource(this.resource).provided} {this.resource.plural}s left in the universe.\n        </React.Fragment>\n    }\n}\n\nclass DataLogExploration extends Exploration{\n    constructor({reason = `You have encountered a dead cosmonaut, and with him his data log.`, ...config} = {}) {\n        super(config);\n\n        this.reason = reason;\n    }\n\n    calculate(zone) {\n        let universe = App.COMPONENT.state.universe;\n        let definition = universe.definition;\n        let dataLog = getRandomElement(definition.dataLogs);\n\n        return {\n            result: <React.Fragment>{this.reason}<br/><br/><br/>\n                <div className=\"data-log\">{dataLog.createDescription(universe)}</div>\n            </React.Fragment>,\n            voice: `Data log found`,\n        }\n    }\n}\n\n\nSTORY_TELLERS.push((definition) => {\n    const stories = [];\n\n    stories.push(new Story({\n        exploration: new DataLogExploration(),\n        weight: 1.0,\n        filter: new Filter({excludedPlanetTraits:[PLANET_TRAIT_START], excludedZoneTypes: [ZONE_TYPE_CITY]})\n    }));\n\n    stories.push(new Story({\n        exploration: new DataLogExploration({reason: 'Earth scientists are providing you with valuable data.'}),\n        weight: 5.0,\n        filter: new Filter({includedPlanetTraits: [PLANET_TRAIT_START], includedZoneTypes: [ZONE_TYPE_CITY]})\n    }));\n\n    return stories;\n});\n\nSerialisation.registerClass(SimpleDataLog, \"SimpleDataLog\");\nSerialisation.registerClass(ResourceDataLog, \"ResourceDataLog\");\nSerialisation.registerClass(DataLogExploration, \"DataLogExploration\");\n","import React from \"react\";\nimport Filter from \"../game/Filter\";\nimport Exploration, {exploreAndReturnToScanner, returnToScanner} from \"../game/Exploration\";\nimport Story, {STORY_TELLERS} from \"../game/Story\";\nimport {RESOURCE_A, RESOURCE_B, RESOURCE_C, RESOURCE_D} from \"../data/resources\";\nimport App from \"../components/App\";\nimport {\n    PLANET_TRAIT_BIO_HAZARD,\n    PLANET_TRAIT_BUGS,\n    PLANET_TRAIT_COLD,\n    PLANET_TRAIT_GAS_GIGANT,\n    PLANET_TRAIT_INTELLIGENT_LIFE,\n    PLANET_TRAIT_ROBOTS,\n    PLANET_TRAITS\n} from \"../data/traits\";\nimport {PLANET_ARCHETYPES} from \"../data/planets\";\nimport {\n    ZONE_TYPE_CITY,\n    ZONE_TYPE_CLOUD,\n    ZONE_TYPE_CRATER,\n    ZONE_TYPE_DESERT,\n    ZONE_TYPE_FOREST,\n    ZONE_TYPE_GLACIER,\n    ZONE_TYPE_MOUNTAIN,\n    ZONE_TYPE_NEST,\n    ZONE_TYPE_OCEAN,\n    ZONE_TYPE_PLAINS,\n    ZONE_TYPE_RIVER,\n    ZONE_TYPE_VALLEY\n} from \"../data/zones\";\nimport {getRandomElement, getRandomInt} from \"../misc/Utils\";\nimport * as Serialization from \"../misc/Serialisation\";\nimport {StaticObject} from \"../misc/Serialisation\";\nimport {DataLog} from \"./dataLogs\";\n\n\nclass SpeciesInfo extends StaticObject {\n    constructor({name, trait, nature, zones, ...config}) {\n        super(config);\n\n        this.name = name;\n        this.trait = trait;\n        this.nature = nature;\n        this.zones = zones;\n    }\n}\n\nclass SpeciesStance extends StaticObject {\n    constructor({createDescription, oppositeStances, reaction, ...config}) {\n        super(config);\n\n        this.createDescription = createDescription;\n        this.oppositeStances = oppositeStances;\n        this.reaction = reaction;\n    }\n}\n\nexport const SPECIES_ROBOTS = new SpeciesInfo({\n    name: \"Robots\",\n    id: \"robots\",\n    trait: PLANET_TRAIT_ROBOTS,\n    nature: {\n        hostile: 1.0,\n        trading: 1.0,\n        sharing: 1.0,\n        died:    1.0,\n    },\n    zones: [\n        ZONE_TYPE_OCEAN,\n        ZONE_TYPE_RIVER,\n        ZONE_TYPE_VALLEY,\n        ZONE_TYPE_PLAINS,\n        ZONE_TYPE_DESERT,\n        ZONE_TYPE_CITY,\n        ZONE_TYPE_NEST,\n        ZONE_TYPE_MOUNTAIN,\n        ZONE_TYPE_CRATER,\n        ZONE_TYPE_FOREST,\n        ZONE_TYPE_CLOUD,\n        ZONE_TYPE_GLACIER,\n    ]\n});\n\nexport const SPECIES_BUGS = new SpeciesInfo({\n    name: \"Bugs\",\n    id: \"bugs\",\n    trait: PLANET_TRAIT_BUGS,\n    nature: {\n        hostile: 1.0,\n        trading: 1.0,\n        sharing: 1.0,\n        died:    1.0,\n    },\n    zones: [\n        ZONE_TYPE_RIVER,\n        ZONE_TYPE_VALLEY,\n        ZONE_TYPE_PLAINS,\n        ZONE_TYPE_DESERT,\n        ZONE_TYPE_CITY,\n        ZONE_TYPE_NEST,\n        ZONE_TYPE_CRATER,\n        ZONE_TYPE_FOREST,\n    ]\n});\n\nexport const SPECIES_INTELLIGENT_LIFE = new SpeciesInfo({\n    name: \"Aliens\",\n    id: \"aliens\",\n    trait: PLANET_TRAIT_INTELLIGENT_LIFE,\n    nature: {\n        hostile: 1.0,\n        trading: 1.0,\n        sharing: 1.0,\n        died:    1.0,\n    },\n    zones: [\n        ZONE_TYPE_RIVER,\n        ZONE_TYPE_VALLEY,\n        ZONE_TYPE_PLAINS,\n        ZONE_TYPE_DESERT,\n        ZONE_TYPE_CITY,\n        ZONE_TYPE_NEST,\n        ZONE_TYPE_MOUNTAIN,\n        ZONE_TYPE_CRATER,\n        ZONE_TYPE_FOREST,\n        ZONE_TYPE_CLOUD,\n        ZONE_TYPE_GLACIER,\n    ]\n});\n\nconst SPECIES_STANCE_HOSTILE = new SpeciesStance({\n    id:\"hostile\",\n    oppositeStances: [], //Will be filled below\n    createDescription: (species, speciesDefinition) => {\n        return <React.Fragment><em>{species.name}</em> are hostile.</React.Fragment>;\n    },\n    reaction: (zone, species, speciesDefinition) => {\n        return {\n            result: `${species.name} have attacked your team while they were exploring the ${zone.name}, contact with your team was lost. Remove them from the game.`,\n            voice: `Warning, we have lost contact.`,\n            buttons: [\n                {name: \"OK\", onClick: () => exploreAndReturnToScanner(zone)},\n            ]\n        }\n    },\n});\n\nconst SPECIES_STANCE_TRADING = new SpeciesStance({\n    id:\"trading\",\n    oppositeStances: [SPECIES_STANCE_HOSTILE],\n    createDescription: (species, speciesDefinition) => <React.Fragment>\n        <em>{species.name}</em> are trading <em>artifacts</em> for {speciesDefinition.tradingResourceCount} <em>{speciesDefinition.tradingResourceCount > 1 ? speciesDefinition.tradingResource.plural : speciesDefinition.tradingResource.name}</em> each.\n    </React.Fragment>,\n    reaction: (zone, species, speciesDefinition) => {\n        let universe = App.COMPONENT.state.universe;\n        let dataLog = getRandomElement(universe.definition.dataLogs);\n\n        return {\n            result: <React.Fragment>\n                While exploring the ${zone.name}, your team has encountered ${species.name}. They\n                are peaceful and would like to share with you their findings in this data log:<br/><br/>\n                <div className=\"data-log\">{dataLog.createDescription(universe)}</div>\n            </React.Fragment>,\n            voice: `Data log found`,\n            buttons: [\n                {name: \"OK\", onClick: () => exploreAndReturnToScanner(zone)},\n            ]\n        };\n    },\n});\n\nconst SPECIES_STANCE_SHARING = new SpeciesStance({\n    id:\"sharing\",\n    oppositeStances: [SPECIES_STANCE_HOSTILE],\n    createDescription: (species, speciesDefinition) =>  <React.Fragment><em>{species.name}</em> are sharing knowledge.</React.Fragment>,\n    reaction: (zone, species, speciesDefinition) => {\n        let result = `${species.name} want to trade, you may spend 3 ${speciesDefinition.tradedResource.plural} to gain one artifact.`;\n        let voice = `You encounter an artifact trader.`;\n        let buttons = [\n            {name: \"Traded\", onClick: () => exploreAndReturnToScanner(zone)},\n            {name: \"Didn't trade\", onClick: () => returnToScanner(zone)},\n        ];\n        return {result, voice, buttons}\n    }\n});\n\nconst SPECIES_STANCE_DEAD = new SpeciesStance({\n    id:\"dead\",\n    oppositeStances: [SPECIES_STANCE_HOSTILE, SPECIES_STANCE_TRADING, SPECIES_STANCE_SHARING],\n    createDescription: (species, speciesDefinition) => {\n        return <React.Fragment>\n            <em>{species.name}</em> died out long time ago.\n        </React.Fragment>\n    }\n});\n\nSPECIES_STANCE_HOSTILE.oppositeStances = [SPECIES_STANCE_TRADING, SPECIES_STANCE_SHARING];\n\n\nconst SPECIES = [\n    SPECIES_INTELLIGENT_LIFE,\n    SPECIES_ROBOTS,\n    SPECIES_BUGS\n];\n\nconst SPECIES_STANCES = [\n    SPECIES_STANCE_HOSTILE,\n    SPECIES_STANCE_TRADING,\n    SPECIES_STANCE_DEAD,\n    SPECIES_STANCE_SHARING,\n];\n\nclass SpeciesExploration extends Exploration {\n    constructor({species, ...config}) {\n        super(config);\n        this.species = species;\n    }\n\n    calculate(zone) {\n        let speciesDefinition = App.COMPONENT.universe.definition.species[this.species.id];\n        return speciesDefinition.stance.reaction(zone, this.species, speciesDefinition);\n    }\n}\n\nclass SpeciesDataLog extends DataLog {\n    constructor({species}) {\n        super();\n\n        this.species = species;\n    }\n\n    createDescription(universe) {\n        let speciesDefinition = universe.definition.species[this.species.id];\n\n        let description = speciesDefinition.stance.createDescription(this.species, speciesDefinition);\n\n        if (speciesDefinition.exceptionTrait) {\n            description = <React.Fragment>Except on planets with <em>{speciesDefinition.exceptionTrait}</em>, {description}</React.Fragment>\n        }\n\n        return description;\n    }\n}\n\nSTORY_TELLERS.push((definition) => {\n    let stories = [];\n\n    for (let species of SPECIES) {\n        let speciesDefinition = definition.species[species.id];\n        let stance = speciesDefinition.stance;\n\n        let providedResources = [];\n        let requiredResources = [];\n\n        if (speciesDefinition.stance === SPECIES_STANCE_TRADING) {\n            for (let i = 0; i < speciesDefinition.tradingResourceCount; i++) {\n                requiredResources.push(speciesDefinition.tradingResource);\n            }\n\n            providedResources.push(RESOURCE_D);\n        }\n\n        stories.push(new Story({\n            weight: species.nature[speciesDefinition.stance.id],\n            exploration: new SpeciesExploration({\n                species: species,\n                providedResources: providedResources,\n                requiredResources: requiredResources,\n            }),\n            filter: new Filter({\n                includedPlanetTraits: species.trait,\n                excludedPlanetTraits: speciesDefinition.exceptionTrait,\n                includedZoneTypes: species.zones,\n            })\n        }));\n\n        if (speciesDefinition.exceptionTrait) {\n            for (let oppositeStance in stance.oppositeStances) {\n\n                let exceptionProvidedResources = [];\n                let exceptionRequiredResources = [];\n\n                if (oppositeStance === SPECIES_STANCE_TRADING) {\n                    for (let i = 0; i < speciesDefinition.tradingResourceCount; i++) {\n                        exceptionRequiredResources.push(speciesDefinition.tradingResource);\n                    }\n\n                    exceptionProvidedResources.push(RESOURCE_D);\n                }\n\n                stories.push(new Story({\n                    weight: species.nature[oppositeStance.id] / stance.oppositeStances.length,\n                    exploration: new SpeciesExploration({\n                        species: species,\n                        providedResources: exceptionProvidedResources,\n                        requiredResources: exceptionRequiredResources,\n                    }),\n                    filter: new Filter({\n                        includedPlanetTraits: [[speciesDefinition.exceptionTrait], [species.trait]],\n                        includedZoneTypes: species.zones,\n                    })\n                }));\n            }\n        }\n    }\n    return stories;\n});\n\n\nexport function fillSpecies(universe) {\n    let definition = universe.definition;\n    definition.species = {\n        bugs: {\n            stance: SPECIES_STANCE_HOSTILE,\n            exceptionTrait: PLANET_TRAIT_COLD,\n            tradingResource: RESOURCE_A,\n            tradingResourceCount: 3,\n        },\n        robots: {\n            stance: SPECIES_STANCE_TRADING,\n            exceptionTrait: PLANET_TRAIT_BIO_HAZARD,\n            tradingResource: RESOURCE_A,\n            tradingResourceCount: 3,\n        },\n        aliens: {\n            stance: SPECIES_STANCE_HOSTILE,\n            exceptionTrait: PLANET_TRAIT_GAS_GIGANT,\n            tradingResource: RESOURCE_A,\n            tradingResourceCount: 3,\n        },\n    };\n\n    for (let species of [SPECIES_INTELLIGENT_LIFE, SPECIES_ROBOTS, SPECIES_BUGS]) {\n        let planetArchetypesWithSpecies = PLANET_ARCHETYPES.filter(archetype => archetype.traits.indexOf(species.trait) !== -1);\n        let traitsCoexistingWithSpecies = PLANET_TRAITS.filter(trait => trait !== species.trait && planetArchetypesWithSpecies.find(archType => archType.traits.indexOf(trait) !== -1));\n\n        let speciesDefinition = definition.species[species.id];\n        speciesDefinition.stance = getRandomElement(SPECIES_STANCES);\n        speciesDefinition.exceptionTrait = Math.random() < 0.5 ? null : getRandomElement(traitsCoexistingWithSpecies);\n        speciesDefinition.tradingResource = getRandomElement([RESOURCE_A, RESOURCE_B, RESOURCE_C]);\n        speciesDefinition.tradingResourceCount = getRandomInt(2, 3);\n\n        definition.dataLogs.push(new SpeciesDataLog({species: species}));\n    }\n}\n\nSerialization.registerClass(SpeciesExploration, \"SpeciesExploration\");\nSerialization.registerClass(SpeciesDataLog, \"SpeciesDataLog\");","export let ENV_DANGER_CAUGHT_IN_METEOR_SHOWER_ID = \"caughtInMeteorShower\";\nexport let ENV_DANGER_TEMPERATURE_ID = \"temperature\";\nexport let ENV_VOLCANIC_ACTIVITY_ID = \"volcanic\";\nexport let ENV_PLANTS_POISONOUS_ID = \"plantsPoison\";\nexport let ENV_TOXIC_ID = \"toxic\";\nexport let ENV_MAGNESIUM_ID = \"magnesium\";\n\nexport let ENVIRONMENTAL_DANGERS = [\n    {\n        id: ENV_DANGER_CAUGHT_IN_METEOR_SHOWER_ID,\n        distribution: [\n            {weight: 1.0, eventOccurrenceWeight: 5.0, description: `Meteor activity is very high, watch out!`},\n            {weight: 1.0, eventOccurrenceWeight: 0.5, description: null},\n            {weight: 1.0, eventOccurrenceWeight: 0.0, description: `Currently, there is no meteor activity.`},\n        ]\n    },\n\n    {\n        id: ENV_DANGER_TEMPERATURE_ID,\n        distribution: [\n            {weight: 1.0, eventOccurrenceWeight: {hot: 4.0, fire: 5.0, cold: 0.0}, description: `Very high temperatures, watch out for hot planets and fires, cold planets are safe though!`},\n            {weight: 1.0, eventOccurrenceWeight: {hot: 0.5, fire: 1.0, cold: 0.5}, description: null},\n            {weight: 1.0, eventOccurrenceWeight: {hot: 0.0, fire: 0.0, cold: 5.0}, description: `Very low temperatures, watch out on cold planets, hot planets are safe though! There will probably be no fires as well ...`},\n        ]\n    },\n\n    {\n        id: ENV_VOLCANIC_ACTIVITY_ID,\n        distribution: [\n            {weight: 1.0, eventOccurrenceWeight: 5.0, description: `A black hole in the center of the galaxy is causing a very high seismic and volcanic activity!`},\n            {weight: 1.0, eventOccurrenceWeight: 0.5, description: null},\n            {weight: 1.0, eventOccurrenceWeight: 0.0, description: `There is very little seismic and volcanic activity in the galaxy.`},\n        ]\n    },\n\n    {\n        id: ENV_PLANTS_POISONOUS_ID,\n        distribution: [\n            {weight: 1.0, eventOccurrenceWeight: 5.0, description: `Plants are extremely dangerous, watch out!`},\n            {weight: 1.0, eventOccurrenceWeight: 0.5, description: null},\n            {weight: 1.0, eventOccurrenceWeight: 0.0, description: `Plants are not dangerous at all!`},\n        ]\n    },\n\n    {\n        id: ENV_TOXIC_ID,\n        distribution: [\n            {weight: 1.0, eventOccurrenceWeight: 5.0, description: `Toxic substances are VERY deadly!`},\n            {weight: 1.0, eventOccurrenceWeight: 0.5, description: null},\n            {weight: 1.0, eventOccurrenceWeight: 0.0, description: `Chemical substances on various planets proven to have negligible effects on the human body.`},\n        ]\n    },\n\n    {\n        id: ENV_MAGNESIUM_ID,\n        distribution: [\n            {weight: 1.0, eventOccurrenceWeight: 3.0, description: `You can find magnesium mountains on high gravity planets, you can mine them using techs in order to get crystals.`},\n            {weight: 1.0, eventOccurrenceWeight: 0.0, description: null},\n        ]\n    },\n];","import Exploration, {exploreAndReturnToScanner, returnToScanner, SimpleExploration} from \"../game/Exploration\";\nimport Dialog from \"../components/Dialog\";\nimport App from '../components/App'\nimport Story, {STORY_TELLERS} from \"../game/Story\";\nimport {\n    PLANET_TRAIT_BIO_HAZARD,\n    PLANET_TRAIT_COLD,\n    PLANET_TRAIT_GRAVITY,\n    PLANET_TRAIT_HOT,\n    PLANET_TRAIT_METEOR_SHOWER,\n    PLANET_TRAIT_PLANT_LIFE,\n    PLANET_TRAIT_VOLCANIC\n} from \"../data/traits\";\nimport {\n    ZONE_TYPE_CONTAINER,\n    ZONE_TYPE_FOREST,\n    ZONE_TYPE_MOUNTAIN,\n    ZONE_TYPE_OCEAN,\n    ZONE_TYPE_PLAINS,\n    ZONE_TYPE_RIVER,\n    ZONE_TYPE_VALLEY\n} from \"../data/zones\";\nimport React from \"react\";\nimport Filter from \"../game/Filter\";\nimport {RESOURCE_A, RESOURCE_C} from \"../data/resources\";\nimport * as Serialisation from \"../misc/Serialisation\";\nimport {getWeightedRandomElement} from \"../misc/Utils\";\nimport {SimpleDataLog} from \"./dataLogs\";\nimport {\n    ENV_DANGER_CAUGHT_IN_METEOR_SHOWER_ID,\n    ENV_DANGER_TEMPERATURE_ID,\n    ENV_MAGNESIUM_ID,\n    ENV_PLANTS_POISONOUS_ID,\n    ENV_TOXIC_ID,\n    ENV_VOLCANIC_ACTIVITY_ID,\n    ENVIRONMENTAL_DANGERS\n} from \"../data/environment\";\n\nclass FireExploration extends Exploration{\n    constructor({...config} = {}) {\n        super(config);\n    }\n\n    calculate(zone) {\n        return {\n            result: <React.Fragment>\n                A gigantic <em>Fire</em> has vigorously spread thorugh the local flora and\n                caught you as you were exploring the {zone.type.name}. The team performing the exploration did not make\n                it, remove them from the game.\n            </React.Fragment>,\n            voice: `Warning, we have lost contact.`,\n        }\n    }\n}\n\nclass MagnesiumExploration extends Exploration{\n    constructor({...config} = {}) {\n        super({\n            providedResources: [RESOURCE_A, RESOURCE_A, RESOURCE_A],\n            requiredResources: [RESOURCE_C],\n            ...config\n        });\n    }\n\n    calculate(zone) {\n        return {\n            result: `You have encountered a Magnesium ${zone.type.name}. It's dangerous to mine, you can spend 1 tech in order to get 3 crystals. Risk it and try to get the 3 crystals without the tech (50% chance) or leave.`,\n            voice: `Danger, spend 1 tech, risk it or back off.`,\n            buttons: [\n                {name: \"Spent 1 tech\", onClick: () => exploreAndReturnToScanner(zone)},\n                {name: \"Risk it\", onClick: () => {\n                        let successful = Math.random() > 0.5;\n                        if (successful) {\n                            App.COMPONENT.setAction(<Dialog result=\"You acquired 3 crystals\" buttons={[{name: \"OK\", onClick: () => exploreAndReturnToScanner(zone)}]} />);\n                        } else {\n                            App.COMPONENT.setAction(<Dialog result=\"The magnesium exploded, your team has been annihilated, remove them from the game.\" buttons={[{name: \"OK\", onClick: () => exploreAndReturnToScanner(zone)}]} />);\n                        }\n                    }},\n                {name: \"Backed off\", onClick: () => returnToScanner(zone)},\n            ],\n        }\n    }\n}\n\nSTORY_TELLERS.push((definition) => {\n    let envStories = [];\n    let environment = definition.environment;\n\n    envStories.push(new Story({\n        exploration: new SimpleExploration({result: `You haven't found anything of interest.`}),\n        weight: 1.0,\n    }));\n\n    envStories.push(new Story({\n        exploration: new SimpleExploration({\n            result: `As unlikely as it is, your team was caught in a meteor shower, remove them from the game.`,\n            voice: `Warning, we have lost contact.`,\n        }),\n        weight: environment[ENV_DANGER_CAUGHT_IN_METEOR_SHOWER_ID],\n        filter: new Filter({includedPlanetTraits: [PLANET_TRAIT_METEOR_SHOWER], excludedZoneTypes: [ZONE_TYPE_CONTAINER, ZONE_TYPE_OCEAN],})\n    }));\n\n\n    envStories.push(new Story({\n        exploration: new SimpleExploration({\n            result: `Your team froze to death, remove them from the game.`,\n            voice: `Warning, we have lost contact.`,\n        }),\n        weight: 5.0 - environment[ENV_DANGER_TEMPERATURE_ID],\n        filter: new Filter({includedPlanetTraits: [PLANET_TRAIT_COLD], excludedPlanetTraits: [PLANET_TRAIT_HOT],})\n    }));\n\n\n    envStories.push(new Story({\n        exploration: new SimpleExploration({\n            result: `Your team was boiled alive due to extreme heat, remove them from the game.`,\n            voice: `Warning, we have lost contact.`,\n        }),\n        weight: environment[ENV_DANGER_TEMPERATURE_ID],\n        filter: new Filter({includedPlanetTraits: [PLANET_TRAIT_HOT], excludedPlanetTraits: [PLANET_TRAIT_COLD],})\n    }));\n\n\n    envStories.push(new Story({\n        exploration: new SimpleExploration({\n            result: `Your team were poisoned by toxic substances on this planet, remove them from the game.`,\n            voice: `Warning, we have lost contact.`,\n        }),\n        weight: environment[ENV_TOXIC_ID],\n        filter: new Filter({includedPlanetTraits: [PLANET_TRAIT_BIO_HAZARD]})\n    }));\n\n\n    envStories.push(new Story({\n        exploration: new SimpleExploration({\n            result: `Your team were poisoned by a poisonous plant, remove them from the game.`,\n            voice: `Warning, we have lost contact.`,\n        }),\n        weight: environment[ENV_PLANTS_POISONOUS_ID],\n        filter: new Filter({includedPlanetTraits: [PLANET_TRAIT_PLANT_LIFE], includedZoneTypes: [ZONE_TYPE_FOREST, ZONE_TYPE_MOUNTAIN, ZONE_TYPE_OCEAN, ZONE_TYPE_PLAINS, ZONE_TYPE_VALLEY, ZONE_TYPE_RIVER],})\n    }));\n\n    envStories.push(new Story({\n        exploration: new SimpleExploration({\n            result: `A volcano erupted and killed your team, remove them from the game.`,\n            voice: `Warning, we have lost contact.`,\n        }),\n        weight: environment[ENV_VOLCANIC_ACTIVITY_ID],\n        filter: new Filter({includedPlanetTraits: [PLANET_TRAIT_VOLCANIC], includedZoneTypes: [ZONE_TYPE_MOUNTAIN],})\n    }));\n\n    envStories.push(new Story({\n        exploration: new MagnesiumExploration(),\n        weight: environment[ENV_MAGNESIUM_ID],\n        filter: new Filter({includedPlanetTraits: [PLANET_TRAIT_GRAVITY], includedZoneTypes: [ZONE_TYPE_MOUNTAIN],})\n    }));\n\n    envStories.push(new Story({\n        exploration: new FireExploration(),\n        weight: environment[ENV_DANGER_TEMPERATURE_ID],\n        filter: new Filter({includedPlanetTraits: [[PLANET_TRAIT_PLANT_LIFE], [PLANET_TRAIT_HOT, PLANET_TRAIT_VOLCANIC, PLANET_TRAIT_METEOR_SHOWER]], excludedPlanetTraits: [PLANET_TRAIT_COLD], includedZoneTypes: [ZONE_TYPE_FOREST, ZONE_TYPE_PLAINS, ZONE_TYPE_VALLEY],})\n    }));\n\n    return envStories;\n});\n\nexport function fillEnvironmentalDangersProbabilities(universe) {\n    universe.definition.environment = {};\n    let environment = universe.definition.environment;\n\n    for (let env of ENVIRONMENTAL_DANGERS) {\n        let frequency = getWeightedRandomElement(env.distribution);\n        environment[env.id] = frequency.eventOccurrenceWeight;\n        if (frequency.description) {\n            universe.definition.dataLogs.push(new SimpleDataLog({description: frequency.description}));\n        }\n    }\n}\n\nSerialisation.registerClass(FireExploration, \"FireExploration\");\nSerialisation.registerClass(MagnesiumExploration, \"MagnesiumExploration\");\nSerialisation.registerClass(SimpleExploration, \"SimpleExploration\");","import {RESOURCES} from \"../game/Resource\";\nimport {\n    PLANET_TRAIT_BIO_HAZARD,\n    PLANET_TRAIT_BUGS,\n    PLANET_TRAIT_OCEAN,\n    PLANET_TRAIT_ROBOTS,\n    PLANET_TRAIT_WIND,\n    PLANET_TRAITS\n} from \"../data/traits\";\nimport {capitalizeFirst, getRandomElement, getWeightedRandomElement} from \"../misc/Utils\";\nimport React from \"react\";\nimport Filter from \"../game/Filter\";\nimport Exploration from \"../game/Exploration\";\nimport Story, {STORY_TELLERS} from \"../game/Story\";\nimport {RESOURCE_A, RESOURCE_B, RESOURCE_D} from \"../data/resources\";\nimport {DataLog} from \"./dataLogs\";\nimport * as Serialization from \"../misc/Serialisation\";\n\nclass ResourceOnColumnDataLog extends DataLog {\n    constructor({resource, column, ...config}) {\n        super(config);\n\n        this.resource = resource;\n        this.column = column;\n    }\n\n    createDescription(universe) {\n        const COLUMN_NAMES = {\n            1: `West`,\n            2: `Center`,\n            3: `East`,\n        };\n        return <React.Fragment>\n            When you look at the exploration grid of each world as a surface map, then <em>{capitalizeFirst(this.resource.plural)}</em> are only found in the <em>{COLUMN_NAMES[this.column]}</em> column.\n        </React.Fragment>;\n    }\n}\n\nclass ResourceOnRowDataLog extends DataLog {\n    constructor({resource, row, ...config}) {\n        super(config);\n\n        this.resource = resource;\n        this.row = row;\n    }\n\n    createDescription(universe) {\n        const ROW_NAMES = {\n            1: `1st`,\n            2: `2nd`,\n            3: `3rd`,\n        };\n        return <React.Fragment>\n            <em>{capitalizeFirst(this.resource.plural)}</em> are only found in the <em>{ROW_NAMES[this.row]}</em> row of the exploration grid.\n        </React.Fragment>;\n    }\n}\n\nclass ResourceOnPlanetDataLog extends DataLog {\n    constructor({resource, trait, ...config}) {\n        super(config);\n\n        this.resource = resource;\n        this.trait = trait;\n    }\n\n    createDescription(universe) {\n        let storyElements = {};\n\n        storyElements[RESOURCE_A.id] = {};\n        storyElements[RESOURCE_A.id][PLANET_TRAIT_OCEAN] = \"Salt crystals. It turns out that crystals are plain salt crystals.\";\n\n        storyElements[RESOURCE_B.id] = {};\n        storyElements[RESOURCE_B.id][PLANET_TRAIT_BUGS] = \"Fuel from Feces. It turned out that the feces of alien bugs were the best source of fuel for spaceships.\";\n        storyElements[RESOURCE_B.id][PLANET_TRAIT_BIO_HAZARD] = \"Hazardous fuel. Fuel for your ship is made out of bio hazardous material, you can get a lot of your fuel there.\";\n\n        storyElements[RESOURCE_D.id] = {};\n        storyElements[RESOURCE_B.id][PLANET_TRAIT_ROBOTS] = \"Ancient Singularity. Ancients reached technological singularity, and were eventually all killed by their creations - super intelligent robots.\";\n        storyElements[RESOURCE_B.id][PLANET_TRAIT_WIND] = \"Wind Powered Monoliths. Ancient monoliths were wind powered.\";\n        storyElements[RESOURCE_B.id][PLANET_TRAIT_OCEAN] = \"Disease Spread by Bugs. The ancients were living in the oceans, you might try your luck at finding artifacts on planets with large oceans.\";\n\n        let story = (this.resource.id in storyElements) && storyElements[this.resource.id][this.trait];\n\n        return story ? story.description : <React.Fragment>\n            <em>{capitalizeFirst(this.resource.name)}</em> can only be found on planets that have <em>{this.trait.toLowerCase()}</em>.\n        </React.Fragment>;\n    }\n}\n\nclass ResourceExploration extends Exploration{\n    constructor({resource, count, ...config} = {}) {\n\n        let providedResources = [];\n        for (let i = 0; i < count; i++) {\n            providedResources.push(resource);\n        }\n\n        super({\n            providedResources: providedResources,\n            ...config\n        });\n\n        this.resource = resource;\n        this.count = count;\n    }\n\n    calculate(zone) {\n        return {\n            result: <React.Fragment>\n                You found {this.count} {this.count === 1 ? this.resource.name : this.resource.plural} in the {zone.name.toLowerCase()}.\n            </React.Fragment>,\n            voice: `You acquired ${this.count} ${this.count === 1 ? this.resource.name : this.resource.plural}.`,\n        }\n    }\n}\n\nexport function fillResourceSources(universe) {\n    let definition = universe.definition;\n    definition.resources = {\n        A: {\n            filter: new Filter(),\n                frequencies: {\n                1: 1.0,\n                2: 0.0,\n                3: 0.0,\n            }\n        },\n        B: {\n            filter: new Filter(),\n                frequencies: {\n                1: 1.0,\n                2: 0.0,\n                3: 0.0,\n            }\n        },\n        C: {\n            filter: new Filter(),\n                frequencies: {\n                1: 1.0,\n                2: 0.0,\n                3: 0.0,\n            }\n        },\n        D: {\n            filter: new Filter(),\n                frequencies: {\n                1: 1.0,\n                2: 0.0,\n                3: 0.0,\n            }\n        }\n    };\n\n    function randomizeResourceSourcePlanet(resource, definition) {\n\n        const trait = getRandomElement(PLANET_TRAITS);\n\n        definition.resources[resource.id].filter = new Filter({includedPlanetTraits: [trait]});\n\n        let rarityMultiplier = 5.0;\n        definition.resources[resource.id].frequencies = {\n            1: rarityMultiplier * 0.6,\n            2: rarityMultiplier * (resource === RESOURCE_D ? 0.0 : 0.3),\n            3: rarityMultiplier * (resource === RESOURCE_D ? 0.0 : 0.1),\n        };\n\n        definition.dataLogs.push(\n            new ResourceOnPlanetDataLog({resource: resource, trait: trait}),\n        )\n    }\n\n    function randomizeResourceSourceRow(resource, definition) {\n        const row = getRandomElement([1,2,3]);\n\n        definition.resources[resource.id].filter = new Filter({allowedRows: [row]});\n\n        let rarityMultiplier = 0.2 + row;\n        definition.resources[resource.id].frequencies = {\n            1: rarityMultiplier * 0.6,\n            2: rarityMultiplier * (resource === RESOURCE_D ? 0.0 : 0.3),\n            3: rarityMultiplier * (resource === RESOURCE_D ? 0.0 : 0.1),\n        };\n\n        definition.dataLogs.push(\n            new ResourceOnRowDataLog({resource: resource, row: row}),\n        )\n    }\n\n    function randomizeResourceSourceColumn(resource, definition) {\n        const column = getRandomElement([1,2,3]);\n\n        definition.resources[resource.id].filter =new Filter({allowedColumns: [column]});\n\n        let rarityMultiplier = 2.0;\n        definition.resources[resource.id].frequencies = {\n            1: rarityMultiplier * 0.6,\n            2: rarityMultiplier * (resource === RESOURCE_D ? 0.0 : 0.3),\n            3: rarityMultiplier * (resource === RESOURCE_D ? 0.0 : 0.1),\n        };\n\n        definition.dataLogs.push(\n            new ResourceOnColumnDataLog({resource: resource, column: column}),\n        )\n    }\n\n    let fs = [\n        {weight: 1.0, f: () => {}},\n        {weight: 1.0, f: randomizeResourceSourceColumn},\n        {weight: 1.0, f: randomizeResourceSourceRow},\n        {weight: 1.0, f: randomizeResourceSourcePlanet},\n    ];\n\n    for (let resource of Object.values(RESOURCES)) {\n        getWeightedRandomElement(fs).f(resource, definition);\n    }\n}\n\nSTORY_TELLERS.push((definition) => {\n    const resourceStories = [];\n\n    for (let resource of Object.values(RESOURCES)) {\n        for (let count = 1; count <= 3; count++) {\n            resourceStories.push(new Story({\n                exploration: new ResourceExploration({\n                    resource: resource,\n                    count: count,\n                }),\n                filter: definition.resources[resource.id].filter,\n                weight: definition.resources[resource.id].frequencies[count],\n            }));\n        }\n    }\n\n    return resourceStories;\n});\n\nSerialization.registerClass(ResourceOnColumnDataLog, \"ResourceOnColumnDataLog\");\nSerialization.registerClass(ResourceOnRowDataLog, \"ResourceOnRowDataLog\");\nSerialization.registerClass(ResourceOnPlanetDataLog, \"ResourceOnPlanetDataLog\");\nSerialization.registerClass(ResourceExploration, \"ResourceExploration\");","import React from \"react\";\nimport Filter from \"../game/Filter\";\nimport {PLANET_TRAITS} from \"../data/traits\";\nimport {\n    ZONE_TYPE_CITY,\n    ZONE_TYPE_CLOUD,\n    ZONE_TYPE_CONTAINER,\n    ZONE_TYPE_MOUNTAIN,\n    ZONE_TYPE_NEST,\n    ZONE_TYPE_OCEAN\n} from \"../data/zones\";\nimport {DataLog} from \"./dataLogs\";\nimport {getRandomElement, getWeightedRandomElement} from \"../misc/Utils\";\nimport * as Serialization from \"../misc/Serialisation\";\n\nclass ScanningRestrictionRowDataLog extends DataLog {\n    constructor({row, ...config}) {\n        super(config);\n\n        this.row = row;\n    }\n\n    createDescription(universe) {\n        const ROW_NAMES = {\n            1: `1st`,\n            2: `2nd`,\n            3: `3rd`,\n        };\n\n        return <React.Fragment>\n            There are rumors about solar flares that interrupt scanners. Your scanners will not be able to view the <em>{ROW_NAMES[this.row]}</em> row of every exploration grid.\n        </React.Fragment>;\n    }\n}\n\nclass ScanningRestrictionTraitDataLog extends DataLog {\n    constructor({trait, ...config}) {\n        super(config);\n\n        this.trait = trait;\n    }\n\n    createDescription(universe) {\n        return <React.Fragment>\n            There are rumors about heavy metal cores of planets with <em>{this.trait}</em>. Your scanners will not be able to scan any of the areas there.\n        </React.Fragment>;\n    }\n}\n\nclass ScanningRestrictionZoneTypeDataLog extends DataLog {\n    constructor({zoneType, ...config}) {\n        super(config);\n\n        this.zoneType = zoneType;\n    }\n\n    createDescription(universe) {\n        return <React.Fragment>\n            There are rumors about something disrupting our scanners around <em>{this.zoneType.plural.toLowerCase()}</em>. Your scanners will not be able to scan any of the zones of that type.\n        </React.Fragment>;\n    }\n}\n\nexport function fillScanningRestrictions(universe) {\n    let definition = universe.definition;\n    definition.scanningRestrictions = new Filter();\n\n    let randomizeRow = () => {\n        const row = getRandomElement([1,2,3]);\n        definition.scanningRestrictions = new Filter({allowedRows: [row]});\n        definition.dataLogs.push(\n            new ScanningRestrictionRowDataLog({row: row}),\n        )\n    };\n\n    let randomizeTrait = () => {\n        const trait = getRandomElement(PLANET_TRAITS);\n        definition.scanningRestrictions = new Filter({includedPlanetTraits: [trait]});\n        definition.dataLogs.push(\n            new ScanningRestrictionTraitDataLog({trait: trait}),\n        )\n    };\n\n    let randomizeZone = () => {\n        const zoneType = getRandomElement([ZONE_TYPE_CONTAINER, ZONE_TYPE_CLOUD, ZONE_TYPE_MOUNTAIN, ZONE_TYPE_OCEAN, ZONE_TYPE_CITY, ZONE_TYPE_NEST]);\n        definition.scanningRestrictions = new Filter({includedZoneTypes: [zoneType]});\n        definition.dataLogs.push(\n            new ScanningRestrictionZoneTypeDataLog({zoneType: zoneType}),\n        )\n    };\n\n    getWeightedRandomElement([\n        {weight: 1.0, f: () => {}},\n        {weight: 1.0, f: randomizeRow},\n        {weight: 1.0, f: randomizeTrait},\n        {weight: 1.0, f: randomizeZone},\n    ]).f();\n}\n\nSerialization.registerClass(ScanningRestrictionZoneTypeDataLog, \"ScanningRestrictionZoneTypeDataLog\");\nSerialization.registerClass(ScanningRestrictionRowDataLog, \"ScanningRestrictionRowDataLog\");\nSerialization.registerClass(ScanningRestrictionTraitDataLog, \"ScanningRestrictionTraitDataLog\");","import {getRandomElement, getRandomInt, shuffle, speak, chance} from \"../misc/Utils\";\nimport React from \"react\";\nimport Exploration, {returnToScanner} from \"../game/Exploration\";\nimport {DataLog} from \"./dataLogs\";\nimport * as Serialization from \"../misc/Serialisation\";\nimport App from \"../components/App\";\nimport Zone from \"../game/Zone\";\nimport {ZONE_TYPE_EXPLORED} from \"../data/zones\";\nimport {RESOURCE_C, RESOURCE_D} from \"../data/resources\";\nimport {PLANET_TRAIT_START} from \"../data/traits\";\nimport './genesis.css';\n\nclass LocationDataLog extends DataLog {\n    constructor({objectName, trait = null, zoneType = null}) {\n        super();\n\n        this.objectName = objectName;\n        this.trait = trait;\n        this.zoneType = zoneType;\n    }\n\n    createDescription(universe) {\n        let traitFragment = this.trait ? <React.Fragment>on a planet with <em>{this.trait}</em></React.Fragment> : '';\n        let zoneFragment = this.zoneType ? <React.Fragment>in a <em>{this.zoneType.name}</em> zone</React.Fragment>: '';\n\n        return <React.Fragment>\n               The ancient <em>{this.objectName}</em> can be found {traitFragment}{zoneFragment}.\n        </React.Fragment>;\n    }\n}\n\n\nclass PartOfTheCodeDataLog extends DataLog {\n    constructor({prefix = \"...\", suffix = \"...\"}) {\n        super();\n\n        this.suffix = suffix;\n        this.prefix = prefix;\n    }\n\n    createDescription(universe) {\n        let complaint = (this.prefix === \"...\" || this.suffix === \"...\")\n                ? \"Too bad that only a part of it is visible and the rest of the message is not accessible.\" : \"\";\n\n        return <React.Fragment>\n            The code for the genesis device is <em>{this.prefix}{this.suffix}</em>.{complaint}\n        </React.Fragment>;\n    }\n}\n\nclass GenesisDeviceActiveExploration extends Exploration{\n    constructor({...config} = {}) {\n        super({\n            requiredResources: [RESOURCE_D, RESOURCE_D, RESOURCE_D, RESOURCE_D, RESOURCE_D],\n            ...config\n        });\n    }\n\n    calculate(zone) {\n        let universe = App.COMPONENT.state.universe;\n        let codes = universe.definition.genesis.codes;\n\n        let codeButtons = [];\n\n        for (let code of codes) {\n            codeButtons.push(<button className=\"genesis-button\" onClick={() => {\n                if (code === universe.definition.genesis.theCode) {\n                    speak('You entered the code, the devices starts to activate. You can now control time and space. The code was correct, you win the game.');\n                    returnToScanner();\n                } else {\n                    speak('You entered the code, the devices starts to activate, but then shuts down. The code must have been incorrect.');\n                    returnToScanner();\n                }\n            }}>{code}</button>);\n        }\n\n        return {\n            result: <React.Fragment>\n                <p>You found the <em>Genesis device</em>. It's humming and ready to be used. You can spend 1 artifact to try to activate it. If you do, choose one of the following codes:</p>\n                {codeButtons}\n            </React.Fragment>,\n            voice: `You found the Genesis device. You can spend 1 artifact to try to activate it.`,\n            buttons: [{name: \"Back\", onClick: () => { returnToScanner(); }}],\n        }\n    }\n}\n\nclass GenesisDeviceInActiveExploration extends Exploration {\n    constructor({...config} = {}) {\n        super({\n            requiredResources: [RESOURCE_D, RESOURCE_D, RESOURCE_D, RESOURCE_D, RESOURCE_D],\n            ...config\n        });\n    }\n\n    calculate(zone) {\n        return {\n            result: <React.Fragment><p>You haven't found anything of interest? Or did you?</p> <p>You have found a gigantic ancient <em>genesis device</em>.</p><p>How does one power it up? You have a hunch the answer may lie in another part of the galaxy.</p></React.Fragment>,\n            voice: `You haven't found anything of interest.`,\n            buttons: [{name: \"OK\", onClick: () => { returnToScanner() } }]\n        }\n    }\n}\n\nclass GenesisBeconExploration extends Exploration{\n    constructor({...config} = {}) {\n        super(config);\n    }\n\n    calculate(zone) {\n        return {\n            result: <React.Fragment>\n                You have found a strange ancient beacon. As you approached it, it started to activate.\n                Receive 1 <em>{RESOURCE_C.name}</em>. It seem to be broadcasting some kind of signal.\n                Could it be awaking something important?.\n            </React.Fragment>,\n            voice: `You have found a strange ancient beacon. As you approached it, it started to activate. Receive 1 ${RESOURCE_C.name}`,\n            buttons: [\n                {\n                    name: \"OK\", onClick: () => {\n                        //\n                        // Explore the current zone\n                        //\n                        let newUniverse = zone.replaceThisZone(new Zone({\n                            ...zone,\n                            type: ZONE_TYPE_EXPLORED,\n                            exploration: null,\n                        }));\n\n                        //\n                        // Activate the genesis device\n                        //\n                        let genesisDevice = newUniverse.definition.genesis.device;\n                        let genesisZone = newUniverse.objects[genesisDevice.planetId].zones[genesisDevice.zoneIndex];\n                        genesisZone.replaceThisZone(new Zone({\n                            ...genesisZone,\n                            exploration: new GenesisDeviceActiveExploration(),\n                        }));\n\n                        returnToScanner(zone);\n                    }\n                }\n            ],\n        }\n    }\n}\n\nexport function fillGenesis(universe) {\n    let beginnings = [];\n    for (let i = 0; i < 2; i++) {\n        beginnings.push(chance.syllable());\n    }\n\n    let endings = [];\n    for (let i = 0; i < 3; i++) {\n        endings.push(chance.syllable());\n    }\n\n    let codes = [];\n    for (let b of beginnings) {\n        for (let e of endings) {\n            codes.push(b + e);\n        }\n    }\n\n    let theBeginning = getRandomElement(beginnings);\n    let theEnding = getRandomElement(endings);\n    let theCode = theBeginning + theEnding;\n\n    let entities = Object.values(universe.objects).filter(entity => entity.traits.indexOf(PLANET_TRAIT_START) === -1);\n    shuffle(entities);\n\n    universe.definition.genesis = {\n        codes: codes,\n        theCode: theCode,\n        device: {\n            planetId: entities[0].id,\n            zoneIndex: getRandomInt(0, entities[0].zones.length - 1)\n        },\n        beacon: {\n            planetId: entities[1].id,\n            zoneIndex: getRandomInt(0, entities[1].zones.length - 1)\n        },\n    };\n\n    {\n        let genesisDevice = universe.definition.genesis.device;\n        let entity = universe.objects[genesisDevice.planetId];\n        let zoneType = entity.getAvailableZoneType();\n        entity.zones[genesisDevice.zoneIndex] = new Zone({\n            planetId: entity.id,\n            zoneIndex: genesisDevice.zoneIndex,\n            type: zoneType,\n            exploration: new GenesisDeviceInActiveExploration()\n        });\n\n        for (let trait of entity.traits) {\n            universe.definition.dataLogs.push(new LocationDataLog({objectName: \"Genesis device\", trait: trait}));\n        }\n\n        universe.definition.dataLogs.push(new LocationDataLog({objectName: \"Genesis device\", zoneType: zoneType}));\n    }\n\n    {\n        let beacon = universe.definition.genesis.beacon;\n        let entity = universe.objects[beacon.planetId];\n        let zoneType = entity.getAvailableZoneType();\n        entity.zones[beacon.zoneIndex] = new Zone({\n            planetId: entity.id,\n            zoneIndex: beacon.zoneIndex,\n            type: zoneType,\n            exploration: new GenesisBeconExploration()\n        });\n\n        for (let trait of entity.traits) {\n            universe.definition.dataLogs.push(new LocationDataLog({objectName: \"Beacon\", trait: trait}));\n        }\n\n        universe.definition.dataLogs.push(new LocationDataLog({objectName: \"Beacon\", zoneType: zoneType}));\n    }\n\n    universe.definition.dataLogs.push(new PartOfTheCodeDataLog({prefix: theBeginning}));\n    universe.definition.dataLogs.push(new PartOfTheCodeDataLog({suffix: theEnding}));\n}\n\nSerialization.registerClass(GenesisDeviceActiveExploration, \"GenesisDeviceActiveExploration\");\nSerialization.registerClass(GenesisDeviceInActiveExploration, \"GenesisDeviceInActiveExploration\");\nSerialization.registerClass(GenesisBeconExploration, \"GenesisBeconExploration\");\nSerialization.registerClass(LocationDataLog, \"LocationDataLog\");\nSerialization.registerClass(PartOfTheCodeDataLog, \"PartOfTheCodeDataLog\");\n","import React from 'react';\nimport {fillPlanets, fillZones} from './Entity'\nimport {RESOURCES} from \"./Resource\";\n\nimport \"../stories/alienSpecies\";\nimport \"../stories/dataLogs\";\nimport \"../stories/environmentalDangers\";\nimport \"../stories/resourceStashes\";\nimport \"../stories/scanDisruptors\";\nimport {fillResourceSources} from \"../stories/resourceStashes\";\nimport * as Serialisation from \"../misc/Serialisation\";\nimport {fillScanningRestrictions} from \"../stories/scanDisruptors\";\nimport {fillSpecies} from \"../stories/alienSpecies\";\nimport {chance} from \"../misc/Utils\";\nimport {fillGenesis} from \"../stories/genesis\";\nimport {fillEnvironmentalDangersProbabilities} from \"../stories/environmentalDangers\";\n\nexport class Universe {\n\n    constructor({name = \"\", objects = {}, definition = {dataLogs: []}} = {}) {\n        this.name = name;\n        this.objects = objects;\n        this.definition = definition;\n    }\n\n    copy() {\n        let newUniverse = new Universe();\n        newUniverse.name = this.name; //does not change\n        newUniverse.objects = Object.assign({}, this.objects);\n        newUniverse.definition = this.definition; //this does not change\n        return newUniverse;\n    }\n\n    get facts() {\n        let facts = [];\n\n        for (let dataLog of this.definition.dataLogs) {\n            facts.push(<React.Fragment>\n                <div className=\"data-log-number\">{facts.length + 1}</div>\n                {dataLog.createDescription(this)}\n            </React.Fragment>)\n        }\n\n        return facts;\n    }\n\n    static create() {\n        let universe = new Universe({name: chance.word()});\n\n        fillPlanets(universe);\n        fillGenesis(universe);\n        fillScanningRestrictions(universe);\n        fillResourceSources(universe);\n        fillSpecies(universe);\n        fillEnvironmentalDangersProbabilities(universe);\n        fillZones(universe);\n\n        return universe;\n    }\n\n    countResource(resource) {\n        let provided = 0;\n        let required = 0;\n\n        for (let entity of Object.values(this.objects)) {\n            for (let zone of entity.zones) {\n                for (let planetResource of zone.providedResources) {\n                    if (planetResource === resource) {\n                        provided += 1;\n                    }\n                }\n\n                for (let planetResource of zone.requiredResources) {\n                    if (planetResource === resource) {\n                        required += 1;\n                    }\n                }\n            }\n        }\n        return {provided, required};\n    }\n\n    get fitness() {\n        let fitness = 100;\n\n        for (let resource of RESOURCES) {\n            let {required, provided} = this.countResource(resource);\n\n            let distance = Math.max(\n                0,\n                required * 2 - provided,\n            );\n\n            fitness -= distance;\n        }\n\n        return fitness;\n    }\n}\n\nSerialisation.registerClass(Universe, \"Universe\");\n\nexport function selectBestUniverse() {\n    console.log(\"Creating universe ...\");\n\n    let UNIVERSE_CANDIDATES = 100;\n    let candidates = [];\n\n    //\n    // Create candidates\n    //\n    for (let i = 0; i < UNIVERSE_CANDIDATES; i++) {\n        let candidate = Universe.create();\n        candidates.push(candidate);\n    }\n\n    //\n    // Sort candidates according to their fitness in descending order\n    //\n    candidates.sort(function (a, b) {\n        return (b.fitness - a.fitness);\n    });\n\n    console.log(\"Candidates\", candidates);\n    console.log(\"Universe\", candidates[0]);\n\n    for (let resource of RESOURCES) {\n        console.log(resource.name, candidates[0].countResource(resource));\n    }\n\n    return candidates[0];\n}\n\n","import React from 'react';\nimport './EntityDetails.css';\n\nexport default class EntityDetails extends React.Component {\n    render() {\n        let planet = this.props.planetData;\n\n        //<p>Explored {planet.currentDepth}/{planet.levels.length}</p>\n        return (\n            <div className=\"planet-details\">\n                <img className=\"detailed-planet-image\" src={\"planets/\" + planet.image} alt={planet.name} />\n\n                <h1>{planet.name}</h1>\n                {\n                    planet.zones.map((zone) => {\n                        return zone.render();\n                    })\n                }\n                <br style={{clear:\"both\"}}/>\n                <br />\n                <button  onClick={this.props.onReset} >Back</button>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {AR} from '../misc/AR';\nimport App from './App';\nimport './Scanner.css';\n\n//\n// Used for communication with the global AR camera\n//\n\nlet LOCKING_ID_MULTIPLE = \"LOCKING_ID_MULTIPLE\";\n\n\nlet SCANNER_MODE_LOCKING        = \"locking\";\nlet SCANNER_MODE_LOCKED         = \"locked\";\nlet SCANNER_MODE_FULLY_EXPLORED = \"explored\";\n\n\nclass DynamicOverlay extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            opacity : 0.0,\n        }\n    }\n\n    componentDidMount() {\n        this.props.onRef(this)\n    }\n    componentWillUnmount() {\n        this.props.onRef(undefined)\n    }\n\n    render() {\n        return <div style={{opacity: this.state.opacity}} className=\"scanner-background\" />;\n    }\n}\n\nexport default class Scanner extends React.Component {\n    constructor(props) {\n        super(props);\n\n        AR.setEnabledCamera(true);\n\n        Scanner.COMPONENT = this;\n\n        this.dynamicOverlay =\n\n        this.state = {\n            lockingId: null,\n            mode: SCANNER_MODE_LOCKING,\n        };\n    }\n\n    componentDidMount() {\n\n        let currentId = null;\n\n        let presence = [];\n        for (let i = 0; i < AR.NUM_MARKERS; i++)\n            presence[i] = 0.0;\n\n\n        let periodicLogging = () => {\n            console.log(currentId, presence);\n            this.periodicLoggingTimeout = setTimeout(periodicLogging, 3000);\n        };\n        this.periodicLoggingTimeout = setTimeout(periodicLogging, 3000);\n\n        let lastTimeMsec = null;\n        let arTick = (nowMsec) => {\n            let i;\n            this.arTickTimeout = requestAnimationFrame(arTick);\n\n            //\n            // Measure time\n            //\n            lastTimeMsec = lastTimeMsec || nowMsec - 1000 / 60;\n            const deltaMsec = Math.min(200, nowMsec - lastTimeMsec);\n            lastTimeMsec = nowMsec;\n            let dt = deltaMsec / 1000;\n\n            //\n            // Boost visible markers\n            //\n            let markerVisibility = AR.getCurrentMarkerVisibility();\n            for (let i = 0; i < AR.NUM_MARKERS; i++) {\n                if (markerVisibility[i]) {\n                    presence[i] += 2.0 * dt;\n\n                    if (presence[i] > 1.0) {\n                        presence[i] = 1.0;\n                    }\n                } else {\n                    presence[i] -= 1.0 * dt;\n\n                    if (presence[i] < 0) {\n                        presence[i] = 0;\n                    }\n                }\n            }\n\n            //\n            // Select most visible markers\n            //\n            let maxPresence = 0.0;\n            let maxId = null;\n            for (let i = 0; i < AR.NUM_MARKERS; i++) {\n                if (presence[i] > maxPresence) {\n                    maxId = i;\n                    maxPresence = presence[i];\n                }\n            }\n\n            //\n            // If there are two similarily present, remove detection\n            //\n            let minDifference = 1.0;\n            if (maxId !== null) {\n                for (i = 0; i < AR.NUM_MARKERS; i++) {\n                    if (i !== maxId && maxPresence - presence[i] < minDifference) {\n                        minDifference = maxPresence - presence[i];\n                    }\n                }\n            } else {\n                minDifference = 0.0;\n            }\n\n            if (maxId !== null && minDifference < 0.9) {\n                maxId = LOCKING_ID_MULTIPLE;\n            }\n\n            if (this.dynamicOverlay) {\n                this.dynamicOverlay.setState({opacity: minDifference / 0.9});\n            }\n\n            if (currentId !== maxId) {\n                this.setLockingId(maxId);\n                currentId = maxId;\n            }\n        };\n        this.arTickTimeout = requestAnimationFrame(arTick);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.periodicLoggingTimeout);\n        cancelAnimationFrame(this.arTickTimeout);\n    }\n\n    setLockingId(lockingId) {\n\n        let mode = SCANNER_MODE_LOCKING;\n\n        if (lockingId !== null && lockingId !== LOCKING_ID_MULTIPLE && lockingId in App.COMPONENT.state.universe.objects) {\n            mode = SCANNER_MODE_LOCKED;\n\n\n            let entity = App.COMPONENT.state.universe.objects[lockingId];\n\n            if (entity.isFullyExplored) {\n                mode = SCANNER_MODE_FULLY_EXPLORED;\n            }\n        }\n\n        console.log(\"locked\", lockingId, mode);\n        this.setState({\n            lockingId: lockingId,\n            mode: mode,\n        });\n\n        if (lockingId in App.COMPONENT.state.universe.objects && !App.COMPONENT.state.universe.objects[lockingId].isFullyExplored)\n        this.selectObject(lockingId);\n    }\n\n    selectObject(objectId) {\n        console.log(\"Selecting\", objectId);\n        if (objectId !== null) {\n            AR.setEnabledCamera(false);\n            this.props.onObjectSelected(objectId);\n        } else {\n            AR.setEnabledCamera(true);\n            this.props.onObjectSelected(objectId);\n        }\n    }\n\n    render() {\n        let lockingInfo;\n\n        if (this.state.mode === SCANNER_MODE_LOCKING) {\n            lockingInfo = 'Scanning'\n        } else if (this.state.mode === SCANNER_MODE_LOCKED) {\n            let entity = App.COMPONENT.state.universe.objects[this.state.lockingId];\n\n            lockingInfo = <React.Fragment>\n                {entity.name}<br/>\n                <img className=\"scanning-planet-image\"\n                     src={\"icons/icon_pattern_\" + this.state.lockingId + \".png\"}\n                     alt={this.state.lockingId}/>\n            </React.Fragment>\n        } else if (this.state.mode === SCANNER_MODE_FULLY_EXPLORED) {\n            let entity = App.COMPONENT.state.universe.objects[this.state.lockingId];\n\n            lockingInfo = <React.Fragment>\n                {entity.name}<br/>\n                <img className=\"scanning-planet-image\"\n                     src={\"icons/icon_pattern_\" + this.state.lockingId + \".png\"}\n                     alt={this.state.lockingId}/><br/>\n                Fully Explored<br/>\n            </React.Fragment>\n        }\n\n        return <div className={\"scanner-overlay scanner-mode-\" + this.state.mode}\n                    onClick={() => {\n                        let canEnter = this.state.lockingId !== null &&\n                            this.state.lockingId in App.COMPONENT.state.universe.objects &&\n                            !App.COMPONENT.state.universe.objects[this.state.lockingId].isFullyExplored;\n\n                        if (canEnter) this.selectObject(this.state.lockingId)\n                    }}\n                >\n            <div className=\"scanner-info\">\n                <h1>{lockingInfo}</h1>\n            </div>\n            <DynamicOverlay onRef={ref => (this.dynamicOverlay = ref)} />\n            <div className=\"scanner-static-background\" />\n        </div>\n\n    }\n}","import React from 'react';\nimport App from './App';\nimport {speak} from \"../misc/Utils\";\n\nexport default class UniverseInfo extends React.Component {\n    render() {\n        speak(\"Revealing universe definition ...\");\n\n        let universe = App.COMPONENT.state.universe;\n        console.log(universe.definition);\n        let facts = universe.facts.map((fact, i) => <div className=\"data-log\" key={i}>{fact}</div>);\n\n        return <div>\n            <h1>{App.COMPONENT.state.universe.name} universe</h1>\n            {facts}\n            <button onClick={() => App.COMPONENT.setAction(null)}>OK</button>\n        </div>\n    }\n}\n","import './EntityList.css';\nimport * as React from \"react\";\n\nexport default class EntityList extends React.Component {\n    render() {\n        let onSelectedPlanet = this.props.onSelectedPlanet;\n        let planetsData = this.props.planets;\n\n        let planets = Object.keys(this.props.planets).map(function(id) {\n            return <button className=\"planet-link\" key={id} onClick={() => onSelectedPlanet(id)}>\n                <img src={\"planets/\" + planetsData[id].image} alt={planetsData[id].name} />\n            </button>;\n        });\n\n        return (\n            <div className=\"planet-list\">\n                <h1>Select a planet:</h1>\n                {planets}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport App from './App';\nimport Scanner from './Scanner';\nimport UniverseInfo from './UniverseInfo';\nimport EntityList from './EntityList';\n\nexport default class TauPrimeMenu extends React.Component {\n    render() {\n        return <div>\n            <h1>Main Menu</h1>\n            <p>Universe: {App.COMPONENT.state.universe.name}</p>\n            <button onClick={() => App.COMPONENT.setAction(<EntityList planets={App.COMPONENT.state.universe.objects} onSelectedPlanet={(objectId) => {\n                App.COMPONENT.setAction(null);\n                Scanner.COMPONENT.selectObject(objectId);\n            }}/>)}>list</button>\n            <button onClick={() => App.COMPONENT.setAction(<UniverseInfo />)}>info</button>\n            <button onClick={() => App.COMPONENT.newGame()}>new game</button>\n            <button onClick={() => App.COMPONENT.setAction(null)}>back</button>\n        </div>\n    }\n}","import React from 'react';\nimport {AR} from '../misc/AR';\nimport {selectBestUniverse} from '../game/Universe';\nimport * as Utils from '../misc/Utils';\nimport './App.css';\nimport EntityDetails from './EntityDetails';\nimport TauPrimeMenu from './TauPrimeMenu';\nimport Scanner from './Scanner';\nimport * as Serialisation from '../misc/Serialisation'\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        App.COMPONENT = this;\n\n        let universe = this.loadUniverse();\n\n        if (!universe) {\n            alert(\"New universe\");\n            universe = selectBestUniverse();\n        } else {\n            //Utils.speak(\"Loaded universe\");\n        }\n\n        this.state = {\n            selectedId: null,\n            universe: universe,\n            currentlyDisplayedAction: null,\n        };\n    }\n\n    get selectedObject() {\n        return this.state.universe.objects[this.state.selectedId];\n    }\n\n    selectObject(objectId) {\n        if (objectId !== null) {\n            console.log(\"selected\", objectId, this.state.universe.objects[objectId])\n            Utils.speak(this.state.universe.objects[objectId].name);\n        }\n\n        this.setState({selectedId: objectId});\n    }\n\n    setAction(action) {\n        this.setState({currentlyDisplayedAction: action});\n\n        if (action !== null) {\n            AR.setEnabledCamera(false);\n        } else {\n            AR.setEnabledCamera(this.state.selectedId === null);\n        }\n    }\n\n    newGame() {\n        console.log(\"New Game\");\n        this.updateUniverse(selectBestUniverse());\n        Utils.speak(\"New universe\");\n        this.setAction(null);\n        this.selectObject(null);\n    }\n\n    loadUniverse() {\n        if (!localStorage.universe)\n            return null;\n\n        return Serialisation.deserialize(localStorage.universe);\n    }\n\n    updateUniverse(universe) {\n        localStorage.universe = Serialisation.serialize(universe);\n        let newUniverse = this.loadUniverse();\n        this.setState({universe: newUniverse});\n    }\n\n    render() {\n        if (this.state.currentlyDisplayedAction !== null) {\n            return this.state.currentlyDisplayedAction\n        } else if (this.state.selectedId !== null) {\n            return <React.Fragment>\n                <EntityDetails\n                    planetId={this.state.selectedId}\n                    planetData={this.state.universe.objects[this.state.selectedId]}\n                    onReset={() => this.selectObject(null)}\n                />\n            </React.Fragment>\n        } else {\n            return <React.Fragment>\n                <button className=\"menu-button\" onClick={() => this.setAction(<TauPrimeMenu/>)}><img\n                    src=\"icons/icon_menu.png\" alt=\"Menu\"/></button>\n                <Scanner onObjectSelected={(objectId) => this.selectObject(objectId)}/>\n            </React.Fragment>\n        }\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './misc/serviceWorker';\nimport {AR} from \"./misc/AR\"\n\nAR.initializeAR();\nReactDOM.render(<App />, document.getElementById('root'));\n//App.COMPONENT.selectObject(3);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}